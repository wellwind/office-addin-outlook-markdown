{"version":3,"sources":["5-es5.c09944ee52aadb7bb9c1.js","webpack:///node_modules/marked/lib/marked.js","webpack:///src/app/markdown-pane/markdown-pane.module.ts","webpack:///node_modules/ngx-markdown/fesm2015/ngx-markdown.js.pre-build-optimizer.js","webpack:///node_modules/ngx-markdown/ngx-markdown.ngfactory.js.pre-build-optimizer.js","webpack:///node_modules/ngx-markdown/ngx-markdown.d.ts.MarkdownComponent.html","webpack:///node_modules/@angular/cdk/esm2015/cdk.js.pre-build-optimizer.js","webpack:///node_modules/@angular/cdk/esm2015/coercion.js.pre-build-optimizer.js","webpack:///node_modules/@angular/cdk/esm2015/platform.js.pre-build-optimizer.js","webpack:///node_modules/@angular/cdk/esm2015/a11y.js.pre-build-optimizer.js","webpack:///node_modules/@angular/material/esm2015/core.js.pre-build-optimizer.js","webpack:///node_modules/@angular/material/esm2015/button.js.pre-build-optimizer.js","webpack:///node_modules/@angular/cdk/esm2015/bidi.js.pre-build-optimizer.js","webpack:///node_modules/@angular/material/button/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///node_modules/@angular/material/button/typings/index.d.ts.MatButton.html","webpack:///src/app/markdown-pane/markdown-pane.component.ts","webpack:///src/app/markdown-pane/markdown-pane.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/markdown-pane/markdown-pane.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///src/app/markdown-pane/markdown-pane.component.html","webpack:///node_modules/@angular/common/fesm2015/http.js.pre-build-optimizer.js","webpack:///src/app/markdown-pane/markdown-pane-routing.module.ts","webpack:///src/app/markdown-pane/markdown-pane.module.ngfactory.js.pre-build-optimizer.js"],"names":["window","webpackJsonp","push","DlQD","module","exports","__webpack_require__","root","block","newline","code","fences","hr","heading","blockquote","list","html","def","nptable","noop","table","lheading","_paragraph","text","Lexer","options","this","tokens","links","Object","create","marked","defaults","rules","normal","pedantic","gfm","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","paragraph","merge","lex","src","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","type","lastToken","trimRight","codeBlockStyle","rtrim","lang","trim","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","task","checked","sanitize","pre","sanitizer","escape","toLowerCase","href","title","Error","charCodeAt","inline","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","name","val","cleanUrl","base","prot","decodeURIComponent","e","originIndependentUrl","baseUrls","encodeURI","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","Math","random","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","listitem","checkbox","tablerow","content","tablecell","flags","baseUrl","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","errMsg","silent","console","log","value","hasOwnProperty","originalSlug","&","<",">","\"","'","obj","target","key","arguments","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","checkSanitizeDeprecation","warn","callback","pending","done","err","message","setOptions","getDefaults","parser","lexer","inlineLexer","global","MarkdownPaneModule","MarkedOptions","ngx_markdown_MarkedRenderer","_super","__extends","ngx_markdown_MarkdownService","platform","http","domSanitizer","defineProperty","_options","assign","compile","markdown","decodeHtml","markedOptions","precompiled","trimIndentation","compiled","core","G","HTML","getSource","_this","get","responseType","pipe","map","a","handleExtension","element","common","m","Prism","document","noLanguageElements","querySelectorAll","Array","forEach","x","classList","add","highlightAllUnder","renderKatex","katex","renderToString","tex","textarea","createElement","innerHTML","extension","line","lineIdentStart","indentStart","isNaN","search","min","PrismPlugin","ngx_markdown_MarkdownComponent","markdownService","error","load","_katex","_lineHighlight","_lineNumbers","coerceBooleanProperty","ngOnChanges","data","handleSrc","handleData","ngAfterViewInit","handleTransclusion","render","katexOptions","nativeElement","handlePlugins","subscribe","emit","lineHighlight","setPluginClass","setPluginOptions","dataLine","dataLineOffset","lineOffset","lineNumbers","dataStart","plugin","preElements","classes","keys","option","attributeValue","attributeName","toLispCase","setAttribute","upperChars","initialMarkedOptions","provide","useValue","tables","MarkdownModule","forRoot","markdownModuleConfig","ngModule","providers","loader","forChild","RenderType_MarkdownComponent","nb","encapsulation","styles","View_MarkdownComponent_0","_l","Fb","zb","VERSION","L","coerceElement","elementOrRef","k","hasV8BreakIterator","Intl","v8BreakIterator","_a","supportsPassiveEvents","_platformId","isBrowser","EDGE","navigator","userAgent","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","ngInjectableDef","Jb","factory","Platform","Kb","z","providedIn","PlatformModule","normalizePassiveListenerOptions","addEventListener","capture","TOUCH_BUFFER_MS","captureEventListenerOptions","passive","FocusMonitor","_ngZone","_platform","_origin","_windowFocused","_elementInfo","Map","_monitoredElementCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","_documentTouchstartListener","event","_touchTimeoutId","clearTimeout","composedPath","setTimeout","_windowFocusListener","_windowFocusTimeoutId","_originTimeoutId","monitor","checkChildren","of","has","cachedInfo","subject","asObservable","info","unlisten","Subject","set","_incrementMonitoredElementCount","focusListener","_onFocus","blurListener","_onBlur","runOutsideAngular","removeEventListener","stopMonitoring","elementInfo","complete","_setClasses","delete","_decrementMonitoredElementCount","focusVia","origin","focus","ngOnDestroy","_info","_toggleClass","className","shouldSet","remove","_wasCausedByTouch","focusTarget","Node","contains","_lastFocusOrigin","_emitOrigin","relatedTarget","run","platform_Platform","VERSION$2","MATERIAL_SANITY_CHECKS","o","core_MatCommonModule","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","U","_isTestEnv","__karma__","jasmine","doctype","getComputedStyle","testElement","appendChild","computedStyle","display","removeChild","full","_checkHammerIsAvailable","Hammer","SUPPORTS_INTL_API","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","core_RippleRenderer","_target","elementOrElementRef","_isPointerDown","_triggerEvents","_activeRipples","Set","_onMousedown","isFakeMousedown","buttons","isSyntheticEvent","_lastTouchStartEvent","Date","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","ripple","persistent","terminateOnPointerUp","_containerElement","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","height","radius","rect","distX","max","abs","right","distY","bottom","sqrt","offsetX","offsetY","duration","style","backgroundColor","color","transitionDuration","getPropertyValue","transform","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","size","rippleEl","opacity","parentNode","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","fn","delay","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_elementRef","ngZone","globalOptions","animationMode","_disabled","_isInitialized","_globalOptions","_rippleRenderer","configOrX","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","disabled","launch","MatRippleModule","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButton","elementRef","_focusMonitor","_animationMode","super","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","attribute","_MatButtonMixinBase","_isRippleDisabled","disableRipple","attributes","_i","some","hasAttribute","defaultColor","class_2","args","_color","colorPalette","mixinColor","class_1","mixinDisabled","class_3","_disableRipple","MatButtonModule","BidiModule","RenderType_MatButton","View_MatButton_0","Cb","pb","ob","animations","_ck","_v","_co","component","Ab","unbounded","MarkdownPaneComponent","Html","insert","Office","context","mailbox","setSelectedDataAsync","coercionType","CoercionType","RenderType_MarkdownPaneComponent","View_MarkdownPaneComponent_0","Eb","en","$event","ad","_handleInput","onTouched","_compositionStart","_compositionEnd","fesm2015_forms","C","Bb","d","p0_0","g","model","update","f","a11y_FocusMonitor","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","MarkdownPaneComponentNgFactory","lb","HttpHeaders","headers","normalizedNames","lazyUpdate","lazyInit","index","maybeSetNormalizedName","values","init","from","getAll","append","clone","op","lcName","copyFrom","applyUpdate","other","concat","toDelete","existing","filter","HttpUrlEncodingCodec","encodeKey","standardEncoding","encodeValue","decodeKey","decodeValue","v","encodeURIComponent","HttpParams","updates","cloneFrom","encoder","fromString","fromObject","rawParams","codec","param","eqIdx","_b","isArray","res","eKey","idx","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","HttpRequest","method","third","fourth","reportProgress","withCredentials","toUpperCase","params","urlWithParams","qIdx","serializeBody","JSON","stringify","detectContentTypeHeader","setHeaders","reduce","setParams","HttpEventType","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","HttpResponse","undefined","HttpResponseBase","status","statusText","defaultStatus","defaultStatusText","ok","addBody","observe","http_HttpClient","handler","request","first","req","events$","concatMap","handle","res$","head","jsonp","callbackParam","patch","post","put","MarkdownPaneRoutingModule","__webpack_exports__","MarkdownPaneModuleNgFactory","mb","xb","yb","Y","router_ngfactory","h","s","p","platform_browser","router","q","path"],"mappings":"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","file":"5-es5.c09944ee52aadb7bb9c1.js","sourcesContent":["(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{DlQD:function(module,exports,__webpack_require__){!function(root){\"use strict\";var block={newline:/^\\n+/,code:/^( {4}[^\\n]+\\n*)+/,fences:/^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,heading:/^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,list:/^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,html:\"^ {0,3}(?:<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)|comment[^\\\\n]*(\\\\n+|$)|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*|<![A-Z][\\\\s\\\\S]*?>\\\\n*|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$))\",def:/^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,nptable:noop,table:noop,lheading:/^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,_paragraph:/^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,text:/^[^\\n]+/};function Lexer(options){this.tokens=[],this.tokens.links=Object.create(null),this.options=options||marked.defaults,this.rules=block.normal,this.options.pedantic?this.rules=block.pedantic:this.options.gfm&&(this.rules=block.gfm)}block._label=/(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/,block._title=/(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/,block.def=edit(block.def).replace(\"label\",block._label).replace(\"title\",block._title).getRegex(),block.bullet=/(?:[*+-]|\\d{1,9}\\.)/,block.item=/^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/,block.item=edit(block.item,\"gm\").replace(/bull/g,block.bullet).getRegex(),block.list=edit(block.list).replace(/bull/g,block.bullet).replace(\"hr\",\"\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))\").replace(\"def\",\"\\\\n+(?=\"+block.def.source+\")\").getRegex(),block._tag=\"address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul\",block._comment=/<!--(?!-?>)[\\s\\S]*?-->/,block.html=edit(block.html,\"i\").replace(\"comment\",block._comment).replace(\"tag\",block._tag).replace(\"attribute\",/ +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex(),block.paragraph=edit(block._paragraph).replace(\"hr\",block.hr).replace(\"heading\",\" {0,3}#{1,6} +\").replace(\"|lheading\",\"\").replace(\"blockquote\",\" {0,3}>\").replace(\"fences\",\" {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n\").replace(\"list\",\" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\",\"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)\").replace(\"tag\",block._tag).getRegex(),block.blockquote=edit(block.blockquote).replace(\"paragraph\",block.paragraph).getRegex(),block.normal=merge({},block),block.gfm=merge({},block.normal,{nptable:/^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,table:/^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/}),block.pedantic=merge({},block.normal,{html:edit(\"^ *(?:comment *(?:\\\\n|\\\\s*$)|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)|<tag(?:\\\"[^\\\"]*\\\"|'[^']*'|\\\\s[^'\\\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))\").replace(\"comment\",block._comment).replace(/tag/g,\"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b\").getRegex(),def:/^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,heading:/^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,fences:noop,paragraph:edit(block.normal._paragraph).replace(\"hr\",block.hr).replace(\"heading\",\" *#{1,6} *[^\\n]\").replace(\"lheading\",block.lheading).replace(\"blockquote\",\" {0,3}>\").replace(\"|fences\",\"\").replace(\"|list\",\"\").replace(\"|html\",\"\").getRegex()}),Lexer.rules=block,Lexer.lex=function(src,options){return new Lexer(options).lex(src)},Lexer.prototype.lex=function(src){return src=src.replace(/\\r\\n|\\r/g,\"\\n\").replace(/\\t/g,\"    \").replace(/\\u00a0/g,\" \").replace(/\\u2424/g,\"\\n\"),this.token(src,!0)},Lexer.prototype.token=function(src,top){var next,loose,cap,bull,b,item,listStart,listItems,t,space,i,tag,l,isordered,istask,ischecked;for(src=src.replace(/^ +$/gm,\"\");src;)if((cap=this.rules.newline.exec(src))&&(src=src.substring(cap[0].length),cap[0].length>1&&this.tokens.push({type:\"space\"})),cap=this.rules.code.exec(src)){var lastToken=this.tokens[this.tokens.length-1];src=src.substring(cap[0].length),lastToken&&\"paragraph\"===lastToken.type?lastToken.text+=\"\\n\"+cap[0].trimRight():(cap=cap[0].replace(/^ {4}/gm,\"\"),this.tokens.push({type:\"code\",codeBlockStyle:\"indented\",text:this.options.pedantic?cap:rtrim(cap,\"\\n\")}))}else if(cap=this.rules.fences.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"code\",lang:cap[2]?cap[2].trim():cap[2],text:cap[3]||\"\"});else if(cap=this.rules.heading.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"heading\",depth:cap[1].length,text:cap[2]});else if((cap=this.rules.nptable.exec(src))&&(item={type:\"table\",header:splitCells(cap[1].replace(/^ *| *\\| *$/g,\"\")),align:cap[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:cap[3]?cap[3].replace(/\\n$/,\"\").split(\"\\n\"):[]}).header.length===item.align.length){for(src=src.substring(cap[0].length),i=0;i<item.align.length;i++)item.align[i]=/^ *-+: *$/.test(item.align[i])?\"right\":/^ *:-+: *$/.test(item.align[i])?\"center\":/^ *:-+ *$/.test(item.align[i])?\"left\":null;for(i=0;i<item.cells.length;i++)item.cells[i]=splitCells(item.cells[i],item.header.length);this.tokens.push(item)}else if(cap=this.rules.hr.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"hr\"});else if(cap=this.rules.blockquote.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"blockquote_start\"}),cap=cap[0].replace(/^ *> ?/gm,\"\"),this.token(cap,top),this.tokens.push({type:\"blockquote_end\"});else if(cap=this.rules.list.exec(src)){for(src=src.substring(cap[0].length),this.tokens.push(listStart={type:\"list_start\",ordered:isordered=(bull=cap[2]).length>1,start:isordered?+bull:\"\",loose:!1}),listItems=[],next=!1,l=(cap=cap[0].match(this.rules.item)).length,i=0;i<l;i++)space=(item=cap[i]).length,~(item=item.replace(/^ *([*+-]|\\d+\\.) */,\"\")).indexOf(\"\\n \")&&(space-=item.length,item=item.replace(this.options.pedantic?/^ {1,4}/gm:new RegExp(\"^ {1,\"+space+\"}\",\"gm\"),\"\")),i!==l-1&&(b=block.bullet.exec(cap[i+1])[0],(bull.length>1?1===b.length:b.length>1||this.options.smartLists&&b!==bull)&&(src=cap.slice(i+1).join(\"\\n\")+src,i=l-1)),loose=next||/\\n\\n(?!\\s*$)/.test(item),i!==l-1&&(next=\"\\n\"===item.charAt(item.length-1),loose||(loose=next)),loose&&(listStart.loose=!0),ischecked=void 0,(istask=/^\\[[ xX]\\] /.test(item))&&(ischecked=\" \"!==item[1],item=item.replace(/^\\[[ xX]\\] +/,\"\")),listItems.push(t={type:\"list_item_start\",task:istask,checked:ischecked,loose:loose}),this.tokens.push(t),this.token(item,!1),this.tokens.push({type:\"list_item_end\"});if(listStart.loose)for(l=listItems.length,i=0;i<l;i++)listItems[i].loose=!0;this.tokens.push({type:\"list_end\"})}else if(cap=this.rules.html.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:this.options.sanitize?\"paragraph\":\"html\",pre:!this.options.sanitizer&&(\"pre\"===cap[1]||\"script\"===cap[1]||\"style\"===cap[1]),text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(cap[0]):escape(cap[0]):cap[0]});else if(top&&(cap=this.rules.def.exec(src)))src=src.substring(cap[0].length),cap[3]&&(cap[3]=cap[3].substring(1,cap[3].length-1)),tag=cap[1].toLowerCase().replace(/\\s+/g,\" \"),this.tokens.links[tag]||(this.tokens.links[tag]={href:cap[2],title:cap[3]});else if((cap=this.rules.table.exec(src))&&(item={type:\"table\",header:splitCells(cap[1].replace(/^ *| *\\| *$/g,\"\")),align:cap[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:cap[3]?cap[3].replace(/\\n$/,\"\").split(\"\\n\"):[]}).header.length===item.align.length){for(src=src.substring(cap[0].length),i=0;i<item.align.length;i++)item.align[i]=/^ *-+: *$/.test(item.align[i])?\"right\":/^ *:-+: *$/.test(item.align[i])?\"center\":/^ *:-+ *$/.test(item.align[i])?\"left\":null;for(i=0;i<item.cells.length;i++)item.cells[i]=splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g,\"\"),item.header.length);this.tokens.push(item)}else if(cap=this.rules.lheading.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"heading\",depth:\"=\"===cap[2].charAt(0)?1:2,text:cap[1]});else if(top&&(cap=this.rules.paragraph.exec(src)))src=src.substring(cap[0].length),this.tokens.push({type:\"paragraph\",text:\"\\n\"===cap[1].charAt(cap[1].length-1)?cap[1].slice(0,-1):cap[1]});else if(cap=this.rules.text.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"text\",text:cap[0]});else if(src)throw new Error(\"Infinite loop on byte: \"+src.charCodeAt(0));return this.tokens};var inline={escape:/^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,autolink:/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,url:noop,tag:\"^comment|^</[a-zA-Z][\\\\w:-]*\\\\s*>|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>|^<\\\\?[\\\\s\\\\S]*?\\\\?>|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\",link:/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,reflink:/^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,nolink:/^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,strong:/^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,em:/^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,code:/^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,br:/^( {2,}|\\\\)\\n(?!\\s*$)/,del:noop,text:/^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/};function InlineLexer(links,options){if(this.options=options||marked.defaults,this.links=links,this.rules=inline.normal,this.renderer=this.options.renderer||new Renderer,this.renderer.options=this.options,!this.links)throw new Error(\"Tokens array requires a `links` property.\");this.options.pedantic?this.rules=inline.pedantic:this.options.gfm&&(this.rules=this.options.breaks?inline.breaks:inline.gfm)}function Renderer(options){this.options=options||marked.defaults}function TextRenderer(){}function Parser(options){this.tokens=[],this.token=null,this.options=options||marked.defaults,this.options.renderer=this.options.renderer||new Renderer,this.renderer=this.options.renderer,this.renderer.options=this.options,this.slugger=new Slugger}function Slugger(){this.seen={}}function escape(html,encode){if(encode){if(escape.escapeTest.test(html))return html.replace(escape.escapeReplace,(function(ch){return escape.replacements[ch]}))}else if(escape.escapeTestNoEncode.test(html))return html.replace(escape.escapeReplaceNoEncode,(function(ch){return escape.replacements[ch]}));return html}function unescape(html){return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/gi,(function(_,n){return\"colon\"===(n=n.toLowerCase())?\":\":\"#\"===n.charAt(0)?\"x\"===n.charAt(1)?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1)):\"\"}))}function edit(regex,opt){return regex=regex.source||regex,opt=opt||\"\",{replace:function(name,val){return val=(val=val.source||val).replace(/(^|[^\\[])\\^/g,\"$1\"),regex=regex.replace(name,val),this},getRegex:function(){return new RegExp(regex,opt)}}}function cleanUrl(sanitize,base,href){if(sanitize){try{var prot=decodeURIComponent(unescape(href)).replace(/[^\\w:]/g,\"\").toLowerCase()}catch(e){return null}if(0===prot.indexOf(\"javascript:\")||0===prot.indexOf(\"vbscript:\")||0===prot.indexOf(\"data:\"))return null}base&&!originIndependentUrl.test(href)&&(href=function(base,href){return baseUrls[\" \"+base]||(baseUrls[\" \"+base]=/^[^:]+:\\/*[^/]*$/.test(base)?base+\"/\":rtrim(base,\"/\",!0)),base=baseUrls[\" \"+base],\"//\"===href.slice(0,2)?base.replace(/:[\\s\\S]*/,\":\")+href:\"/\"===href.charAt(0)?base.replace(/(:\\/*[^/]*)[\\s\\S]*/,\"$1\")+href:base+href}(base,href));try{href=encodeURI(href).replace(/%25/g,\"%\")}catch(e){return null}return href}inline._punctuation=\"!\\\"#$%&'()*+,\\\\-./:;<=>?@\\\\[^_{|}~\",inline.em=edit(inline.em).replace(/punctuation/g,inline._punctuation).getRegex(),inline._escapes=/\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g,inline._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,inline._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,inline.autolink=edit(inline.autolink).replace(\"scheme\",inline._scheme).replace(\"email\",inline._email).getRegex(),inline._attribute=/\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/,inline.tag=edit(inline.tag).replace(\"comment\",block._comment).replace(\"attribute\",inline._attribute).getRegex(),inline._label=/(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/,inline._href=/<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/,inline._title=/\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/,inline.link=edit(inline.link).replace(\"label\",inline._label).replace(\"href\",inline._href).replace(\"title\",inline._title).getRegex(),inline.reflink=edit(inline.reflink).replace(\"label\",inline._label).getRegex(),inline.normal=merge({},inline),inline.pedantic=merge({},inline.normal,{strong:/^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,em:/^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,link:edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace(\"label\",inline._label).getRegex(),reflink:edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace(\"label\",inline._label).getRegex()}),inline.gfm=merge({},inline.normal,{escape:edit(inline.escape).replace(\"])\",\"~|])\").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~+(?=\\S)([\\s\\S]*?\\S)~+/,text:/^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/}),inline.gfm.url=edit(inline.gfm.url,\"i\").replace(\"email\",inline.gfm._extended_email).getRegex(),inline.breaks=merge({},inline.gfm,{br:edit(inline.br).replace(\"{2,}\",\"*\").getRegex(),text:edit(inline.gfm.text).replace(\"\\\\b_\",\"\\\\b_| {2,}\\\\n\").replace(/\\{2,\\}/g,\"*\").getRegex()}),InlineLexer.rules=inline,InlineLexer.output=function(src,links,options){return new InlineLexer(links,options).output(src)},InlineLexer.prototype.output=function(src){for(var link,text,href,title,cap,prevCapZero,out=\"\";src;)if(cap=this.rules.escape.exec(src))src=src.substring(cap[0].length),out+=escape(cap[1]);else if(cap=this.rules.tag.exec(src))!this.inLink&&/^<a /i.test(cap[0])?this.inLink=!0:this.inLink&&/^<\\/a>/i.test(cap[0])&&(this.inLink=!1),!this.inRawBlock&&/^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])?this.inRawBlock=!0:this.inRawBlock&&/^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])&&(this.inRawBlock=!1),src=src.substring(cap[0].length),out+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(cap[0]):escape(cap[0]):cap[0];else if(cap=this.rules.link.exec(src)){var lastParenIndex=findClosingBracket(cap[2],\"()\");if(lastParenIndex>-1){var linkLen=4+cap[1].length+lastParenIndex;cap[2]=cap[2].substring(0,lastParenIndex),cap[0]=cap[0].substring(0,linkLen).trim(),cap[3]=\"\"}src=src.substring(cap[0].length),this.inLink=!0,href=cap[2],this.options.pedantic?(link=/^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href))?(href=link[1],title=link[3]):title=\"\":title=cap[3]?cap[3].slice(1,-1):\"\",href=href.trim().replace(/^<([\\s\\S]*)>$/,\"$1\"),out+=this.outputLink(cap,{href:InlineLexer.escapes(href),title:InlineLexer.escapes(title)}),this.inLink=!1}else if((cap=this.rules.reflink.exec(src))||(cap=this.rules.nolink.exec(src))){if(src=src.substring(cap[0].length),link=(cap[2]||cap[1]).replace(/\\s+/g,\" \"),!(link=this.links[link.toLowerCase()])||!link.href){out+=cap[0].charAt(0),src=cap[0].substring(1)+src;continue}this.inLink=!0,out+=this.outputLink(cap,link),this.inLink=!1}else if(cap=this.rules.strong.exec(src))src=src.substring(cap[0].length),out+=this.renderer.strong(this.output(cap[4]||cap[3]||cap[2]||cap[1]));else if(cap=this.rules.em.exec(src))src=src.substring(cap[0].length),out+=this.renderer.em(this.output(cap[6]||cap[5]||cap[4]||cap[3]||cap[2]||cap[1]));else if(cap=this.rules.code.exec(src))src=src.substring(cap[0].length),out+=this.renderer.codespan(escape(cap[2].trim(),!0));else if(cap=this.rules.br.exec(src))src=src.substring(cap[0].length),out+=this.renderer.br();else if(cap=this.rules.del.exec(src))src=src.substring(cap[0].length),out+=this.renderer.del(this.output(cap[1]));else if(cap=this.rules.autolink.exec(src))src=src.substring(cap[0].length),href=\"@\"===cap[2]?\"mailto:\"+(text=escape(this.mangle(cap[1]))):text=escape(cap[1]),out+=this.renderer.link(href,null,text);else if(this.inLink||!(cap=this.rules.url.exec(src))){if(cap=this.rules.text.exec(src))src=src.substring(cap[0].length),out+=this.renderer.text(this.inRawBlock?this.options.sanitize?this.options.sanitizer?this.options.sanitizer(cap[0]):escape(cap[0]):cap[0]:escape(this.smartypants(cap[0])));else if(src)throw new Error(\"Infinite loop on byte: \"+src.charCodeAt(0))}else{if(\"@\"===cap[2])href=\"mailto:\"+(text=escape(cap[0]));else{do{prevCapZero=cap[0],cap[0]=this.rules._backpedal.exec(cap[0])[0]}while(prevCapZero!==cap[0]);text=escape(cap[0]),href=\"www.\"===cap[1]?\"http://\"+text:text}src=src.substring(cap[0].length),out+=this.renderer.link(href,null,text)}return out},InlineLexer.escapes=function(text){return text?text.replace(InlineLexer.rules._escapes,\"$1\"):text},InlineLexer.prototype.outputLink=function(cap,link){var href=link.href,title=link.title?escape(link.title):null;return\"!\"!==cap[0].charAt(0)?this.renderer.link(href,title,this.output(cap[1])):this.renderer.image(href,title,escape(cap[1]))},InlineLexer.prototype.smartypants=function(text){return this.options.smartypants?text.replace(/---/g,\"—\").replace(/--/g,\"–\").replace(/(^|[-\\u2014/(\\[{\"\\s])'/g,\"$1‘\").replace(/'/g,\"’\").replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g,\"$1“\").replace(/\"/g,\"”\").replace(/\\.{3}/g,\"…\"):text},InlineLexer.prototype.mangle=function(text){if(!this.options.mangle)return text;for(var ch,out=\"\",l=text.length,i=0;i<l;i++)ch=text.charCodeAt(i),Math.random()>.5&&(ch=\"x\"+ch.toString(16)),out+=\"&#\"+ch+\";\";return out},Renderer.prototype.code=function(code,infostring,escaped){var lang=(infostring||\"\").match(/\\S*/)[0];if(this.options.highlight){var out=this.options.highlight(code,lang);null!=out&&out!==code&&(escaped=!0,code=out)}return lang?'<pre><code class=\"'+this.options.langPrefix+escape(lang,!0)+'\">'+(escaped?code:escape(code,!0))+\"</code></pre>\\n\":\"<pre><code>\"+(escaped?code:escape(code,!0))+\"</code></pre>\"},Renderer.prototype.blockquote=function(quote){return\"<blockquote>\\n\"+quote+\"</blockquote>\\n\"},Renderer.prototype.html=function(html){return html},Renderer.prototype.heading=function(text,level,raw,slugger){return this.options.headerIds?\"<h\"+level+' id=\"'+this.options.headerPrefix+slugger.slug(raw)+'\">'+text+\"</h\"+level+\">\\n\":\"<h\"+level+\">\"+text+\"</h\"+level+\">\\n\"},Renderer.prototype.hr=function(){return this.options.xhtml?\"<hr/>\\n\":\"<hr>\\n\"},Renderer.prototype.list=function(body,ordered,start){var type=ordered?\"ol\":\"ul\";return\"<\"+type+(ordered&&1!==start?' start=\"'+start+'\"':\"\")+\">\\n\"+body+\"</\"+type+\">\\n\"},Renderer.prototype.listitem=function(text){return\"<li>\"+text+\"</li>\\n\"},Renderer.prototype.checkbox=function(checked){return\"<input \"+(checked?'checked=\"\" ':\"\")+'disabled=\"\" type=\"checkbox\"'+(this.options.xhtml?\" /\":\"\")+\"> \"},Renderer.prototype.paragraph=function(text){return\"<p>\"+text+\"</p>\\n\"},Renderer.prototype.table=function(header,body){return body&&(body=\"<tbody>\"+body+\"</tbody>\"),\"<table>\\n<thead>\\n\"+header+\"</thead>\\n\"+body+\"</table>\\n\"},Renderer.prototype.tablerow=function(content){return\"<tr>\\n\"+content+\"</tr>\\n\"},Renderer.prototype.tablecell=function(content,flags){var type=flags.header?\"th\":\"td\";return(flags.align?\"<\"+type+' align=\"'+flags.align+'\">':\"<\"+type+\">\")+content+\"</\"+type+\">\\n\"},Renderer.prototype.strong=function(text){return\"<strong>\"+text+\"</strong>\"},Renderer.prototype.em=function(text){return\"<em>\"+text+\"</em>\"},Renderer.prototype.codespan=function(text){return\"<code>\"+text+\"</code>\"},Renderer.prototype.br=function(){return this.options.xhtml?\"<br/>\":\"<br>\"},Renderer.prototype.del=function(text){return\"<del>\"+text+\"</del>\"},Renderer.prototype.link=function(href,title,text){if(null===(href=cleanUrl(this.options.sanitize,this.options.baseUrl,href)))return text;var out='<a href=\"'+escape(href)+'\"';return title&&(out+=' title=\"'+title+'\"'),out+\">\"+text+\"</a>\"},Renderer.prototype.image=function(href,title,text){if(null===(href=cleanUrl(this.options.sanitize,this.options.baseUrl,href)))return text;var out='<img src=\"'+href+'\" alt=\"'+text+'\"';return title&&(out+=' title=\"'+title+'\"'),out+(this.options.xhtml?\"/>\":\">\")},Renderer.prototype.text=function(text){return text},TextRenderer.prototype.strong=TextRenderer.prototype.em=TextRenderer.prototype.codespan=TextRenderer.prototype.del=TextRenderer.prototype.text=function(text){return text},TextRenderer.prototype.link=TextRenderer.prototype.image=function(href,title,text){return\"\"+text},TextRenderer.prototype.br=function(){return\"\"},Parser.parse=function(src,options){return new Parser(options).parse(src)},Parser.prototype.parse=function(src){this.inline=new InlineLexer(src.links,this.options),this.inlineText=new InlineLexer(src.links,merge({},this.options,{renderer:new TextRenderer})),this.tokens=src.reverse();for(var out=\"\";this.next();)out+=this.tok();return out},Parser.prototype.next=function(){return this.token=this.tokens.pop(),this.token},Parser.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},Parser.prototype.parseText=function(){for(var body=this.token.text;\"text\"===this.peek().type;)body+=\"\\n\"+this.next().text;return this.inline.output(body)},Parser.prototype.tok=function(){switch(this.token.type){case\"space\":return\"\";case\"hr\":return this.renderer.hr();case\"heading\":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,unescape(this.inlineText.output(this.token.text)),this.slugger);case\"code\":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case\"table\":var i,row,cell,j,header=\"\",body=\"\";for(cell=\"\",i=0;i<this.token.header.length;i++)cell+=this.renderer.tablecell(this.inline.output(this.token.header[i]),{header:!0,align:this.token.align[i]});for(header+=this.renderer.tablerow(cell),i=0;i<this.token.cells.length;i++){for(row=this.token.cells[i],cell=\"\",j=0;j<row.length;j++)cell+=this.renderer.tablecell(this.inline.output(row[j]),{header:!1,align:this.token.align[j]});body+=this.renderer.tablerow(cell)}return this.renderer.table(header,body);case\"blockquote_start\":for(body=\"\";\"blockquote_end\"!==this.next().type;)body+=this.tok();return this.renderer.blockquote(body);case\"list_start\":body=\"\";for(var ordered=this.token.ordered,start=this.token.start;\"list_end\"!==this.next().type;)body+=this.tok();return this.renderer.list(body,ordered,start);case\"list_item_start\":body=\"\";var loose=this.token.loose,checked=this.token.checked,task=this.token.task;for(this.token.task&&(body+=this.renderer.checkbox(checked));\"list_item_end\"!==this.next().type;)body+=loose||\"text\"!==this.token.type?this.tok():this.parseText();return this.renderer.listitem(body,task,checked);case\"html\":return this.renderer.html(this.token.text);case\"paragraph\":return this.renderer.paragraph(this.inline.output(this.token.text));case\"text\":return this.renderer.paragraph(this.parseText());default:var errMsg='Token with \"'+this.token.type+'\" type was not found.';if(!this.options.silent)throw new Error(errMsg);console.log(errMsg)}},Slugger.prototype.slug=function(value){var slug=value.toLowerCase().trim().replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g,\"\").replace(/\\s/g,\"-\");if(this.seen.hasOwnProperty(slug)){var originalSlug=slug;do{this.seen[originalSlug]++,slug=originalSlug+\"-\"+this.seen[originalSlug]}while(this.seen.hasOwnProperty(slug))}return this.seen[slug]=0,slug},escape.escapeTest=/[&<>\"']/,escape.escapeReplace=/[&<>\"']/g,escape.replacements={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},escape.escapeTestNoEncode=/[<>\"']|&(?!#?\\w+;)/,escape.escapeReplaceNoEncode=/[<>\"']|&(?!#?\\w+;)/g;var baseUrls={},originIndependentUrl=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function noop(){}function merge(obj){for(var target,key,i=1;i<arguments.length;i++)for(key in target=arguments[i])Object.prototype.hasOwnProperty.call(target,key)&&(obj[key]=target[key]);return obj}function splitCells(tableRow,count){var cells=tableRow.replace(/\\|/g,(function(match,offset,str){for(var escaped=!1,curr=offset;--curr>=0&&\"\\\\\"===str[curr];)escaped=!escaped;return escaped?\"|\":\" |\"})).split(/ \\|/),i=0;if(cells.length>count)cells.splice(count);else for(;cells.length<count;)cells.push(\"\");for(;i<cells.length;i++)cells[i]=cells[i].trim().replace(/\\\\\\|/g,\"|\");return cells}function rtrim(str,c,invert){if(0===str.length)return\"\";for(var suffLen=0;suffLen<str.length;){var currChar=str.charAt(str.length-suffLen-1);if(currChar!==c||invert){if(currChar===c||!invert)break;suffLen++}else suffLen++}return str.substr(0,str.length-suffLen)}function findClosingBracket(str,b){if(-1===str.indexOf(b[1]))return-1;for(var level=0,i=0;i<str.length;i++)if(\"\\\\\"===str[i])i++;else if(str[i]===b[0])level++;else if(str[i]===b[1]&&--level<0)return i;return-1}function checkSanitizeDeprecation(opt){opt&&opt.sanitize&&!opt.silent&&console.warn(\"marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options\")}function marked(src,opt,callback){if(null==src)throw new Error(\"marked(): input parameter is undefined or null\");if(\"string\"!=typeof src)throw new Error(\"marked(): input parameter is of type \"+Object.prototype.toString.call(src)+\", string expected\");if(callback||\"function\"==typeof opt){callback||(callback=opt,opt=null),checkSanitizeDeprecation(opt=merge({},marked.defaults,opt||{}));var tokens,pending,highlight=opt.highlight,i=0;try{tokens=Lexer.lex(src,opt)}catch(e){return callback(e)}pending=tokens.length;var done=function(err){if(err)return opt.highlight=highlight,callback(err);var out;try{out=Parser.parse(tokens,opt)}catch(e){err=e}return opt.highlight=highlight,err?callback(err):callback(null,out)};if(!highlight||highlight.length<3)return done();if(delete opt.highlight,!pending)return done();for(;i<tokens.length;i++)!function(token){\"code\"!==token.type?--pending||done():highlight(token.text,token.lang,(function(err,code){return err?done(err):null==code||code===token.text?--pending||done():(token.text=code,token.escaped=!0,void(--pending||done()))}))}(tokens[i])}else try{return opt&&(opt=merge({},marked.defaults,opt)),checkSanitizeDeprecation(opt),Parser.parse(Lexer.lex(src,opt),opt)}catch(e){if(e.message+=\"\\nPlease report this to https://github.com/markedjs/marked.\",(opt||marked.defaults).silent)return\"<p>An error occurred:</p><pre>\"+escape(e.message+\"\",!0)+\"</pre>\";throw e}}noop.exec=noop,marked.options=marked.setOptions=function(opt){return merge(marked.defaults,opt),marked},marked.getDefaults=function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:\"\",highlight:null,langPrefix:\"language-\",mangle:!0,pedantic:!1,renderer:new Renderer,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,xhtml:!1}},marked.defaults=marked.getDefaults(),marked.Parser=Parser,marked.parser=Parser.parse,marked.Renderer=Renderer,marked.TextRenderer=TextRenderer,marked.Lexer=Lexer,marked.lexer=Lexer.lex,marked.InlineLexer=InlineLexer,marked.inlineLexer=InlineLexer.output,marked.Slugger=Slugger,marked.parse=marked,module.exports=marked}(this||(\"undefined\"!=typeof window?window:global))},dA8M:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);var core=__webpack_require__(\"8Y7J\");class MarkdownPaneModule{}var router_ngfactory=__webpack_require__(\"pMnS\"),fesm2015_forms=__webpack_require__(\"s7LF\"),common=__webpack_require__(\"SVse\"),marked=__webpack_require__(\"DlQD\"),map=__webpack_require__(\"lJxs\");__webpack_require__(\"SxV6\");class MarkedOptions{}class ngx_markdown_MarkedRenderer extends marked.Renderer{}const errorKatexNotLoaded=\"[ngx-markdown When using the [katex] attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information\",errorSrcWithoutHttpClient=\"[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information\";class ngx_markdown_MarkdownService{constructor(platform,http,domSanitizer,options){this.platform=platform,this.http=http,this.domSanitizer=domSanitizer,this.options=options}get options(){return this._options}set options(value){this._options=Object.assign({},{renderer:new ngx_markdown_MarkedRenderer},this._options,value)}get renderer(){return this.options.renderer}set renderer(value){this.options.renderer=value}compile(markdown,decodeHtml=!1,markedOptions=this.options){let precompiled=this.trimIndentation(markdown);precompiled=decodeHtml?this.decodeHtml(precompiled):precompiled;const compiled=Object(marked.parse)(precompiled,markedOptions);return markedOptions.sanitize&&!markedOptions.sanitizer?this.domSanitizer.sanitize(core.G.HTML,compiled):compiled}getSource(src){if(!this.http)throw new Error(errorSrcWithoutHttpClient);return this.http.get(src,{responseType:\"text\"}).pipe(Object(map.a)(markdown=>this.handleExtension(src,markdown)))}highlight(element){if(Object(common.m)(this.platform)&&\"undefined\"!=typeof Prism){element||(element=document);const noLanguageElements=element.querySelectorAll('pre code:not([class*=\"language-\"])');Array.prototype.forEach.call(noLanguageElements,x=>x.classList.add(\"language-none\")),Prism.highlightAllUnder(element)}}renderKatex(html,options){if(\"undefined\"==typeof katex||void 0===katex.renderToString)throw new Error(errorKatexNotLoaded);return html.replace(/\\$([^\\s][^$]*?[^\\s])\\$/gm,(_,tex)=>katex.renderToString(tex,options))}decodeHtml(html){if(Object(common.m)(this.platform)){const textarea=document.createElement(\"textarea\");return textarea.innerHTML=html,textarea.value}return html}handleExtension(src,markdown){const extension=src?src.split(\"?\")[0].split(\".\").splice(-1).join():null;return\"md\"!==extension?\"```\"+extension+\"\\n\"+markdown+\"\\n```\":markdown}trimIndentation(markdown){if(!markdown)return\"\";let indentStart;return markdown.split(\"\\n\").map(line=>{let lineIdentStart=indentStart;return line.length>0&&(lineIdentStart=isNaN(lineIdentStart)?line.search(/\\S|$/):Math.min(line.search(/\\S|$/),lineIdentStart)),isNaN(indentStart)&&(indentStart=lineIdentStart),lineIdentStart?line.substring(lineIdentStart):line}).join(\"\\n\")}}const PrismPlugin={LineHighlight:\"line-highlight\",LineNumbers:\"line-numbers\"};class ngx_markdown_MarkdownComponent{constructor(element,markdownService){this.element=element,this.markdownService=markdownService,this.error=new core.m,this.load=new core.m,this._katex=!1,this._lineHighlight=!1,this._lineNumbers=!1}get katex(){return this._katex}set katex(value){this._katex=this.coerceBooleanProperty(value)}get lineNumbers(){return this._lineNumbers}set lineNumbers(value){this._lineNumbers=this.coerceBooleanProperty(value)}get lineHighlight(){return this._lineHighlight}set lineHighlight(value){this._lineHighlight=this.coerceBooleanProperty(value)}ngOnChanges(){null==this.data?null==this.src||this.handleSrc():this.handleData()}ngAfterViewInit(){this.data||this.src||this.handleTransclusion()}render(markdown,decodeHtml=!1){let compiled=this.markdownService.compile(markdown,decodeHtml);compiled=this.katex?this.markdownService.renderKatex(compiled,this.katexOptions):compiled,this.element.nativeElement.innerHTML=compiled,this.handlePlugins(),this.markdownService.highlight(this.element.nativeElement)}coerceBooleanProperty(value){return null!=value&&\"false\"!==`${value}`}handleData(){this.render(this.data)}handleSrc(){this.markdownService.getSource(this.src).subscribe(markdown=>{this.render(markdown),this.load.emit(markdown)},error=>this.error.emit(error))}handleTransclusion(){this.render(this.element.nativeElement.innerHTML,!0)}handlePlugins(){this.lineHighlight&&(this.setPluginClass(this.element.nativeElement,PrismPlugin.LineHighlight),this.setPluginOptions(this.element.nativeElement,{dataLine:this.line,dataLineOffset:this.lineOffset})),this.lineNumbers&&(this.setPluginClass(this.element.nativeElement,PrismPlugin.LineNumbers),this.setPluginOptions(this.element.nativeElement,{dataStart:this.start}))}setPluginClass(element,plugin){const preElements=element.querySelectorAll(\"pre\");for(let i=0;i<preElements.length;i++){const classes=plugin instanceof Array?plugin:[plugin];preElements.item(i).classList.add(...classes)}}setPluginOptions(element,options){const preElements=element.querySelectorAll(\"pre\");for(let i=0;i<preElements.length;i++)Object.keys(options).forEach(option=>{const attributeValue=options[option];if(attributeValue){const attributeName=this.toLispCase(option);preElements.item(i).setAttribute(attributeName,attributeValue.toString())}})}toLispCase(value){const upperChars=value.match(/([A-Z])/g);if(!upperChars)return value;let str=value.toString();for(let i=0,n=upperChars.length;i<n;i++)str=str.replace(new RegExp(upperChars[i]),\"-\"+upperChars[i].toLowerCase());return\"-\"===str.slice(0,1)&&(str=str.slice(1)),str}}const initialMarkedOptions={provide:MarkedOptions,useValue:{gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1}};class MarkdownModule{static forRoot(markdownModuleConfig){return{ngModule:MarkdownModule,providers:[ngx_markdown_MarkdownService,markdownModuleConfig&&markdownModuleConfig.loader||[],markdownModuleConfig&&markdownModuleConfig.markedOptions||initialMarkedOptions]}}static forChild(){return{ngModule:MarkdownModule}}}var RenderType_MarkdownComponent=core.nb({encapsulation:2,styles:[],data:{}});function View_MarkdownComponent_0(_l){return core.Fb(0,[core.zb(null,0)],null,null)}var platform_browser=__webpack_require__(\"cUpR\");const VERSION=new core.L(\"8.2.3\");function coerceBooleanProperty(value){return null!=value&&\"false\"!==`${value}`}function coerceElement(elementOrRef){return elementOrRef instanceof core.k?elementOrRef.nativeElement:elementOrRef}var Subject=__webpack_require__(\"XNiG\");let hasV8BreakIterator;__webpack_require__(\"HDdC\");try{hasV8BreakIterator=\"undefined\"!=typeof Intl&&Intl.v8BreakIterator}catch(_a){hasV8BreakIterator=!1}let supportsPassiveEvents,platform_Platform=(()=>{class Platform{constructor(_platformId){this._platformId=_platformId,this.isBrowser=this._platformId?Object(common.m)(this._platformId):\"object\"==typeof document&&!!document,this.EDGE=this.isBrowser&&/(edge)/i.test(navigator.userAgent),this.TRIDENT=this.isBrowser&&/(msie|trident)/i.test(navigator.userAgent),this.BLINK=this.isBrowser&&!(!window.chrome&&!hasV8BreakIterator)&&\"undefined\"!=typeof CSS&&!this.EDGE&&!this.TRIDENT,this.WEBKIT=this.isBrowser&&/AppleWebKit/i.test(navigator.userAgent)&&!this.BLINK&&!this.EDGE&&!this.TRIDENT,this.IOS=this.isBrowser&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!(\"MSStream\"in window),this.FIREFOX=this.isBrowser&&/(firefox|minefield)/i.test(navigator.userAgent),this.ANDROID=this.isBrowser&&/android/i.test(navigator.userAgent)&&!this.TRIDENT,this.SAFARI=this.isBrowser&&/safari/i.test(navigator.userAgent)&&this.WEBKIT}}return Platform.ngInjectableDef=Object(core.Jb)({factory:function(){return new Platform(Object(core.Kb)(core.z,8))},token:Platform,providedIn:\"root\"}),Platform})();class PlatformModule{}function normalizePassiveListenerOptions(options){return function(){if(null==supportsPassiveEvents&&\"undefined\"!=typeof window)try{window.addEventListener(\"test\",null,Object.defineProperty({},\"passive\",{get:()=>supportsPassiveEvents=!0}))}finally{supportsPassiveEvents=supportsPassiveEvents||!1}return supportsPassiveEvents}()?options:!!options.capture}__webpack_require__(\"JX91\"),__webpack_require__(\"quSY\");var of=__webpack_require__(\"LRne\");__webpack_require__(\"vkgz\"),__webpack_require__(\"7o/Q\");var filter=__webpack_require__(\"pLZG\");__webpack_require__(\"IzEk\");const TOUCH_BUFFER_MS=650,captureEventListenerOptions=normalizePassiveListenerOptions({passive:!0,capture:!0});let a11y_FocusMonitor=(()=>{class FocusMonitor{constructor(_ngZone,_platform){this._ngZone=_ngZone,this._platform=_platform,this._origin=null,this._windowFocused=!1,this._elementInfo=new Map,this._monitoredElementCount=0,this._documentKeydownListener=()=>{this._lastTouchTarget=null,this._setOriginForCurrentEventQueue(\"keyboard\")},this._documentMousedownListener=()=>{this._lastTouchTarget||this._setOriginForCurrentEventQueue(\"mouse\")},this._documentTouchstartListener=event=>{null!=this._touchTimeoutId&&clearTimeout(this._touchTimeoutId),this._lastTouchTarget=event.composedPath?event.composedPath()[0]:event.target,this._touchTimeoutId=setTimeout(()=>this._lastTouchTarget=null,TOUCH_BUFFER_MS)},this._windowFocusListener=()=>{this._windowFocused=!0,this._windowFocusTimeoutId=setTimeout(()=>this._windowFocused=!1)}}monitor(element,checkChildren=!1){if(!this._platform.isBrowser)return Object(of.a)(null);const nativeElement=coerceElement(element);if(this._elementInfo.has(nativeElement)){let cachedInfo=this._elementInfo.get(nativeElement);return cachedInfo.checkChildren=checkChildren,cachedInfo.subject.asObservable()}let info={unlisten:()=>{},checkChildren:checkChildren,subject:new Subject.a};this._elementInfo.set(nativeElement,info),this._incrementMonitoredElementCount();let focusListener=event=>this._onFocus(event,nativeElement),blurListener=event=>this._onBlur(event,nativeElement);return this._ngZone.runOutsideAngular(()=>{nativeElement.addEventListener(\"focus\",focusListener,!0),nativeElement.addEventListener(\"blur\",blurListener,!0)}),info.unlisten=()=>{nativeElement.removeEventListener(\"focus\",focusListener,!0),nativeElement.removeEventListener(\"blur\",blurListener,!0)},info.subject.asObservable()}stopMonitoring(element){const nativeElement=coerceElement(element),elementInfo=this._elementInfo.get(nativeElement);elementInfo&&(elementInfo.unlisten(),elementInfo.subject.complete(),this._setClasses(nativeElement),this._elementInfo.delete(nativeElement),this._decrementMonitoredElementCount())}focusVia(element,origin,options){const nativeElement=coerceElement(element);this._setOriginForCurrentEventQueue(origin),\"function\"==typeof nativeElement.focus&&nativeElement.focus(options)}ngOnDestroy(){this._elementInfo.forEach((_info,element)=>this.stopMonitoring(element))}_toggleClass(element,className,shouldSet){shouldSet?element.classList.add(className):element.classList.remove(className)}_setClasses(element,origin){this._elementInfo.get(element)&&(this._toggleClass(element,\"cdk-focused\",!!origin),this._toggleClass(element,\"cdk-touch-focused\",\"touch\"===origin),this._toggleClass(element,\"cdk-keyboard-focused\",\"keyboard\"===origin),this._toggleClass(element,\"cdk-mouse-focused\",\"mouse\"===origin),this._toggleClass(element,\"cdk-program-focused\",\"program\"===origin))}_setOriginForCurrentEventQueue(origin){this._ngZone.runOutsideAngular(()=>{this._origin=origin,this._originTimeoutId=setTimeout(()=>this._origin=null,1)})}_wasCausedByTouch(event){let focusTarget=event.target;return this._lastTouchTarget instanceof Node&&focusTarget instanceof Node&&(focusTarget===this._lastTouchTarget||focusTarget.contains(this._lastTouchTarget))}_onFocus(event,element){const elementInfo=this._elementInfo.get(element);if(!elementInfo||!elementInfo.checkChildren&&element!==event.target)return;let origin=this._origin;origin||(origin=this._windowFocused&&this._lastFocusOrigin?this._lastFocusOrigin:this._wasCausedByTouch(event)?\"touch\":\"program\"),this._setClasses(element,origin),this._emitOrigin(elementInfo.subject,origin),this._lastFocusOrigin=origin}_onBlur(event,element){const elementInfo=this._elementInfo.get(element);!elementInfo||elementInfo.checkChildren&&event.relatedTarget instanceof Node&&element.contains(event.relatedTarget)||(this._setClasses(element),this._emitOrigin(elementInfo.subject,null))}_emitOrigin(subject,origin){this._ngZone.run(()=>subject.next(origin))}_incrementMonitoredElementCount(){1==++this._monitoredElementCount&&this._platform.isBrowser&&this._ngZone.runOutsideAngular(()=>{document.addEventListener(\"keydown\",this._documentKeydownListener,captureEventListenerOptions),document.addEventListener(\"mousedown\",this._documentMousedownListener,captureEventListenerOptions),document.addEventListener(\"touchstart\",this._documentTouchstartListener,captureEventListenerOptions),window.addEventListener(\"focus\",this._windowFocusListener)})}_decrementMonitoredElementCount(){--this._monitoredElementCount||(document.removeEventListener(\"keydown\",this._documentKeydownListener,captureEventListenerOptions),document.removeEventListener(\"mousedown\",this._documentMousedownListener,captureEventListenerOptions),document.removeEventListener(\"touchstart\",this._documentTouchstartListener,captureEventListenerOptions),window.removeEventListener(\"focus\",this._windowFocusListener),clearTimeout(this._windowFocusTimeoutId),clearTimeout(this._touchTimeoutId),clearTimeout(this._originTimeoutId))}}return FocusMonitor.ngInjectableDef=Object(core.Jb)({factory:function(){return new FocusMonitor(Object(core.Kb)(core.x),Object(core.Kb)(platform_Platform))},token:FocusMonitor,providedIn:\"root\"}),FocusMonitor})();const VERSION$2=new core.L(\"8.2.3\"),MATERIAL_SANITY_CHECKS=new core.o(\"mat-sanity-checks\",{providedIn:\"root\",factory:function(){return!0}});class core_MatCommonModule{constructor(_sanityChecksEnabled,_hammerLoader){this._sanityChecksEnabled=_sanityChecksEnabled,this._hammerLoader=_hammerLoader,this._hasDoneGlobalChecks=!1,this._hasCheckedHammer=!1,this._document=\"object\"==typeof document&&document?document:null,this._window=\"object\"==typeof window&&window?window:null,this._areChecksEnabled()&&!this._hasDoneGlobalChecks&&(this._checkDoctypeIsDefined(),this._checkThemeIsPresent(),this._checkCdkVersionMatch(),this._hasDoneGlobalChecks=!0)}_areChecksEnabled(){return this._sanityChecksEnabled&&Object(core.U)()&&!this._isTestEnv()}_isTestEnv(){const window=this._window;return window&&(window.__karma__||window.jasmine)}_checkDoctypeIsDefined(){this._document&&!this._document.doctype&&console.warn(\"Current document does not have a doctype. This may cause some Angular Material components not to behave as expected.\")}_checkThemeIsPresent(){if(!this._document||!this._document.body||\"function\"!=typeof getComputedStyle)return;const testElement=this._document.createElement(\"div\");testElement.classList.add(\"mat-theme-loaded-marker\"),this._document.body.appendChild(testElement);const computedStyle=getComputedStyle(testElement);computedStyle&&\"none\"!==computedStyle.display&&console.warn(\"Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming\"),this._document.body.removeChild(testElement)}_checkCdkVersionMatch(){VERSION$2.full!==VERSION.full&&console.warn(\"The Angular Material version (\"+VERSION$2.full+\") does not match the Angular CDK version (\"+VERSION.full+\").\\nPlease ensure the versions of these two packages exactly match.\")}_checkHammerIsAvailable(){!this._hasCheckedHammer&&this._window&&(!this._areChecksEnabled()||this._window.Hammer||this._hammerLoader||console.warn(\"Could not find HammerJS. Certain Angular Material components may not work correctly.\"),this._hasCheckedHammer=!0)}}function mixinDisabled(base){return class extends base{constructor(...args){super(...args),this._disabled=!1}get disabled(){return this._disabled}set disabled(value){this._disabled=coerceBooleanProperty(value)}}}function mixinColor(base,defaultColor){return class extends base{get color(){return this._color}set color(value){const colorPalette=value||defaultColor;colorPalette!==this._color&&(this._color&&this._elementRef.nativeElement.classList.remove(`mat-${this._color}`),colorPalette&&this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`),this._color=colorPalette)}constructor(...args){super(...args),this.color=defaultColor}}}function mixinDisableRipple(base){return class extends base{constructor(...args){super(...args),this._disableRipple=!1}get disableRipple(){return this._disableRipple}set disableRipple(value){this._disableRipple=coerceBooleanProperty(value)}}}let SUPPORTS_INTL_API;try{SUPPORTS_INTL_API=\"undefined\"!=typeof Intl}catch(_a){SUPPORTS_INTL_API=!1}const RippleState=function(){var RippleState={FADING_IN:0,VISIBLE:1,FADING_OUT:2,HIDDEN:3};return RippleState[RippleState.FADING_IN]=\"FADING_IN\",RippleState[RippleState.VISIBLE]=\"VISIBLE\",RippleState[RippleState.FADING_OUT]=\"FADING_OUT\",RippleState[RippleState.HIDDEN]=\"HIDDEN\",RippleState}();class RippleRef{constructor(_renderer,element,config){this._renderer=_renderer,this.element=element,this.config=config,this.state=RippleState.HIDDEN}fadeOut(){this._renderer.fadeOutRipple(this)}}const defaultRippleAnimationConfig={enterDuration:450,exitDuration:400},ignoreMouseEventsTimeout=800,passiveEventOptions=normalizePassiveListenerOptions({passive:!0});class core_RippleRenderer{constructor(_target,_ngZone,elementOrElementRef,platform){this._target=_target,this._ngZone=_ngZone,this._isPointerDown=!1,this._triggerEvents=new Map,this._activeRipples=new Set,this._onMousedown=event=>{const isFakeMousedown=function(event){return 0===event.buttons}(event),isSyntheticEvent=this._lastTouchStartEvent&&Date.now()<this._lastTouchStartEvent+ignoreMouseEventsTimeout;this._target.rippleDisabled||isFakeMousedown||isSyntheticEvent||(this._isPointerDown=!0,this.fadeInRipple(event.clientX,event.clientY,this._target.rippleConfig))},this._onTouchStart=event=>{if(!this._target.rippleDisabled){this._lastTouchStartEvent=Date.now(),this._isPointerDown=!0;const touches=event.changedTouches;for(let i=0;i<touches.length;i++)this.fadeInRipple(touches[i].clientX,touches[i].clientY,this._target.rippleConfig)}},this._onPointerUp=()=>{this._isPointerDown&&(this._isPointerDown=!1,this._activeRipples.forEach(ripple=>{!ripple.config.persistent&&(ripple.state===RippleState.VISIBLE||ripple.config.terminateOnPointerUp&&ripple.state===RippleState.FADING_IN)&&ripple.fadeOut()}))},platform.isBrowser&&(this._containerElement=coerceElement(elementOrElementRef),this._triggerEvents.set(\"mousedown\",this._onMousedown).set(\"mouseup\",this._onPointerUp).set(\"mouseleave\",this._onPointerUp).set(\"touchstart\",this._onTouchStart).set(\"touchend\",this._onPointerUp).set(\"touchcancel\",this._onPointerUp))}fadeInRipple(x,y,config={}){const containerRect=this._containerRect=this._containerRect||this._containerElement.getBoundingClientRect(),animationConfig=Object.assign({},defaultRippleAnimationConfig,config.animation);config.centered&&(x=containerRect.left+containerRect.width/2,y=containerRect.top+containerRect.height/2);const radius=config.radius||function(x,y,rect){const distX=Math.max(Math.abs(x-rect.left),Math.abs(x-rect.right)),distY=Math.max(Math.abs(y-rect.top),Math.abs(y-rect.bottom));return Math.sqrt(distX*distX+distY*distY)}(x,y,containerRect),offsetX=x-containerRect.left,offsetY=y-containerRect.top,duration=animationConfig.enterDuration,ripple=document.createElement(\"div\");ripple.classList.add(\"mat-ripple-element\"),ripple.style.left=`${offsetX-radius}px`,ripple.style.top=`${offsetY-radius}px`,ripple.style.height=`${2*radius}px`,ripple.style.width=`${2*radius}px`,ripple.style.backgroundColor=config.color||null,ripple.style.transitionDuration=`${duration}ms`,this._containerElement.appendChild(ripple),window.getComputedStyle(ripple).getPropertyValue(\"opacity\"),ripple.style.transform=\"scale(1)\";const rippleRef=new RippleRef(this,ripple,config);return rippleRef.state=RippleState.FADING_IN,this._activeRipples.add(rippleRef),config.persistent||(this._mostRecentTransientRipple=rippleRef),this._runTimeoutOutsideZone(()=>{const isMostRecentTransientRipple=rippleRef===this._mostRecentTransientRipple;rippleRef.state=RippleState.VISIBLE,config.persistent||isMostRecentTransientRipple&&this._isPointerDown||rippleRef.fadeOut()},duration),rippleRef}fadeOutRipple(rippleRef){const wasActive=this._activeRipples.delete(rippleRef);if(rippleRef===this._mostRecentTransientRipple&&(this._mostRecentTransientRipple=null),this._activeRipples.size||(this._containerRect=null),!wasActive)return;const rippleEl=rippleRef.element,animationConfig=Object.assign({},defaultRippleAnimationConfig,rippleRef.config.animation);rippleEl.style.transitionDuration=`${animationConfig.exitDuration}ms`,rippleEl.style.opacity=\"0\",rippleRef.state=RippleState.FADING_OUT,this._runTimeoutOutsideZone(()=>{rippleRef.state=RippleState.HIDDEN,rippleEl.parentNode.removeChild(rippleEl)},animationConfig.exitDuration)}fadeOutAll(){this._activeRipples.forEach(ripple=>ripple.fadeOut())}setupTriggerEvents(elementOrElementRef){const element=coerceElement(elementOrElementRef);element&&element!==this._triggerElement&&(this._removeTriggerEvents(),this._ngZone.runOutsideAngular(()=>{this._triggerEvents.forEach((fn,type)=>{element.addEventListener(type,fn,passiveEventOptions)})}),this._triggerElement=element)}_runTimeoutOutsideZone(fn,delay=0){this._ngZone.runOutsideAngular(()=>setTimeout(fn,delay))}_removeTriggerEvents(){this._triggerElement&&this._triggerEvents.forEach((fn,type)=>{this._triggerElement.removeEventListener(type,fn,passiveEventOptions)})}}const MAT_RIPPLE_GLOBAL_OPTIONS=new core.o(\"mat-ripple-global-options\");class MatRipple{constructor(_elementRef,ngZone,platform,globalOptions,animationMode){this._elementRef=_elementRef,this.radius=0,this._disabled=!1,this._isInitialized=!1,this._globalOptions=globalOptions||{},this._rippleRenderer=new core_RippleRenderer(this,ngZone,_elementRef,platform),\"NoopAnimations\"===animationMode&&(this._globalOptions.animation={enterDuration:0,exitDuration:0})}get disabled(){return this._disabled}set disabled(value){this._disabled=value,this._setupTriggerEventsIfEnabled()}get trigger(){return this._trigger||this._elementRef.nativeElement}set trigger(trigger){this._trigger=trigger,this._setupTriggerEventsIfEnabled()}ngOnInit(){this._isInitialized=!0,this._setupTriggerEventsIfEnabled()}ngOnDestroy(){this._rippleRenderer._removeTriggerEvents()}fadeOutAll(){this._rippleRenderer.fadeOutAll()}get rippleConfig(){return{centered:this.centered,radius:this.radius,color:this.color,animation:Object.assign({},this._globalOptions.animation,this.animation),terminateOnPointerUp:this._globalOptions.terminateOnPointerUp}}get rippleDisabled(){return this.disabled||!!this._globalOptions.disabled}_setupTriggerEventsIfEnabled(){!this.disabled&&this._isInitialized&&this._rippleRenderer.setupTriggerEvents(this.trigger)}launch(configOrX,y=0,config){return\"number\"==typeof configOrX?this._rippleRenderer.fadeInRipple(configOrX,y,Object.assign({},this.rippleConfig,config)):this._rippleRenderer.fadeInRipple(0,0,Object.assign({},this.rippleConfig,configOrX))}}class MatRippleModule{}const DEFAULT_ROUND_BUTTON_COLOR=\"accent\",BUTTON_HOST_ATTRIBUTES=[\"mat-button\",\"mat-flat-button\",\"mat-icon-button\",\"mat-raised-button\",\"mat-stroked-button\",\"mat-mini-fab\",\"mat-fab\"];class MatButtonBase{constructor(_elementRef){this._elementRef=_elementRef}}const _MatButtonMixinBase=mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));class MatButton extends _MatButtonMixinBase{constructor(elementRef,_focusMonitor,_animationMode){super(elementRef),this._focusMonitor=_focusMonitor,this._animationMode=_animationMode,this.isRoundButton=this._hasHostAttributes(\"mat-fab\",\"mat-mini-fab\"),this.isIconButton=this._hasHostAttributes(\"mat-icon-button\");for(const attr of BUTTON_HOST_ATTRIBUTES)this._hasHostAttributes(attr)&&this._getHostElement().classList.add(attr);elementRef.nativeElement.classList.add(\"mat-button-base\"),this._focusMonitor.monitor(this._elementRef,!0),this.isRoundButton&&(this.color=DEFAULT_ROUND_BUTTON_COLOR)}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}focus(origin=\"program\",options){this._focusMonitor.focusVia(this._getHostElement(),origin,options)}_getHostElement(){return this._elementRef.nativeElement}_isRippleDisabled(){return this.disableRipple||this.disabled}_hasHostAttributes(...attributes){return attributes.some(attribute=>this._getHostElement().hasAttribute(attribute))}}class MatButtonModule{}class BidiModule{}var animations=__webpack_require__(\"omvX\"),RenderType_MatButton=core.nb({encapsulation:2,styles:[\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-focus-overlay,.mat-stroked-button .mat-button-ripple.mat-ripple{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:#fff}}@media (-ms-high-contrast:black-on-white){.mat-button-focus-overlay{background-color:#000}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],data:{}});function View_MatButton_0(_l){return core.Fb(2,[core.Cb(671088640,1,{ripple:0}),(_l()(),core.pb(1,0,null,null,1,\"span\",[[\"class\",\"mat-button-wrapper\"]],null,null,null,null,null)),core.zb(null,0),(_l()(),core.pb(3,0,null,null,1,\"div\",[[\"class\",\"mat-button-ripple mat-ripple\"],[\"matRipple\",\"\"]],[[2,\"mat-button-ripple-round\",null],[2,\"mat-ripple-unbounded\",null]],null,null,null,null)),core.ob(4,212992,[[1,4]],0,MatRipple,[core.k,core.x,platform_Platform,[2,MAT_RIPPLE_GLOBAL_OPTIONS],[2,animations.a]],{centered:[0,\"centered\"],disabled:[1,\"disabled\"],trigger:[2,\"trigger\"]},null),(_l()(),core.pb(5,0,null,null,0,\"div\",[[\"class\",\"mat-button-focus-overlay\"]],null,null,null,null,null))],(function(_ck,_v){var _co=_v.component;_ck(_v,4,0,_co.isIconButton,_co._isRippleDisabled(),_co._getHostElement())}),(function(_ck,_v){var _co=_v.component;_ck(_v,3,0,_co.isRoundButton||_co.isIconButton,core.Ab(_v,4).unbounded)}))}class MarkdownPaneComponent{constructor(markdownService){this.markdownService=markdownService,this.content=\"\"}ngOnInit(){}insert(){const html=this.markdownService.compile(this.content);console.log(html),Office.context.mailbox.item.body.setSelectedDataAsync(html,{coercionType:Office.CoercionType.Html})}}var RenderType_MarkdownPaneComponent=core.nb({encapsulation:0,styles:[[\"\"]],data:{}});function View_MarkdownPaneComponent_0(_l){return core.Fb(0,[(_l()(),core.pb(0,0,null,null,19,\"section\",[[\"style\",\"display:flex; flex-direction: column; width: 98%; height: 100%; margin: 0; padding: 0\"]],null,null,null,null,null)),(_l()(),core.pb(1,0,null,null,8,\"section\",[[\"style\",\"height: 100%; display: flex; flex-direction: column;\"]],null,null,null,null,null)),(_l()(),core.pb(2,0,null,null,1,\"h1\",[],null,null,null,null,null)),(_l()(),core.Eb(-1,null,[\"Markdown\"])),(_l()(),core.pb(4,0,null,null,5,\"textarea\",[[\"style\",\"width:100%; height: 100%;\"]],[[2,\"ng-untouched\",null],[2,\"ng-touched\",null],[2,\"ng-pristine\",null],[2,\"ng-dirty\",null],[2,\"ng-valid\",null],[2,\"ng-invalid\",null],[2,\"ng-pending\",null]],[[null,\"ngModelChange\"],[null,\"input\"],[null,\"blur\"],[null,\"compositionstart\"],[null,\"compositionend\"]],(function(_v,en,$event){var ad=!0,_co=_v.component;return\"input\"===en&&(ad=!1!==core.Ab(_v,5)._handleInput($event.target.value)&&ad),\"blur\"===en&&(ad=!1!==core.Ab(_v,5).onTouched()&&ad),\"compositionstart\"===en&&(ad=!1!==core.Ab(_v,5)._compositionStart()&&ad),\"compositionend\"===en&&(ad=!1!==core.Ab(_v,5)._compositionEnd($event.target.value)&&ad),\"ngModelChange\"===en&&(ad=!1!==(_co.content=$event)&&ad),ad}),null,null)),core.ob(5,16384,null,0,fesm2015_forms.b,[core.C,core.k,[2,fesm2015_forms.a]],null,null),core.Bb(1024,null,fesm2015_forms.d,(function(p0_0){return[p0_0]}),[fesm2015_forms.b]),core.ob(7,671744,null,0,fesm2015_forms.g,[[8,null],[8,null],[8,null],[6,fesm2015_forms.d]],{model:[0,\"model\"]},{update:\"ngModelChange\"}),core.Bb(2048,null,fesm2015_forms.e,null,[fesm2015_forms.g]),core.ob(9,16384,null,0,fesm2015_forms.f,[[4,fesm2015_forms.e]],null,null),(_l()(),core.pb(10,0,null,null,5,\"section\",[[\"style\",\"height: 100%; display: flex; flex-direction: column;\"]],null,null,null,null,null)),(_l()(),core.pb(11,0,null,null,1,\"h1\",[],null,null,null,null,null)),(_l()(),core.Eb(-1,null,[\"Preview\"])),(_l()(),core.pb(13,0,null,null,2,\"div\",[[\"style\",\"border: 1px solid #000; width: 100%; height: 100%; overflow: auto;\"]],null,null,null,null,null)),(_l()(),core.pb(14,0,null,null,1,\"markdown\",[],null,null,null,View_MarkdownComponent_0,RenderType_MarkdownComponent)),core.ob(15,4767744,null,0,ngx_markdown_MarkdownComponent,[core.k,ngx_markdown_MarkdownService],{data:[0,\"data\"]},null),(_l()(),core.pb(16,0,null,null,3,\"section\",[[\"class\",\"ms-Fabric\"],[\"style\",\"padding: 5px;\"]],null,null,null,null,null)),(_l()(),core.pb(17,0,null,null,2,\"button\",[[\"color\",\"primary\"],[\"mat-raised-button\",\"\"]],[[1,\"disabled\",0],[2,\"_mat-animation-noopable\",null]],[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.insert()&&ad),ad}),View_MatButton_0,RenderType_MatButton)),core.ob(18,180224,null,0,MatButton,[core.k,a11y_FocusMonitor,[2,animations.a]],{color:[0,\"color\"]},null),(_l()(),core.Eb(-1,0,[\"Insert\"]))],(function(_ck,_v){var _co=_v.component;_ck(_v,7,0,_co.content),_ck(_v,15,0,_co.content),_ck(_v,18,0,\"primary\")}),(function(_ck,_v){_ck(_v,4,0,core.Ab(_v,9).ngClassUntouched,core.Ab(_v,9).ngClassTouched,core.Ab(_v,9).ngClassPristine,core.Ab(_v,9).ngClassDirty,core.Ab(_v,9).ngClassValid,core.Ab(_v,9).ngClassInvalid,core.Ab(_v,9).ngClassPending),_ck(_v,17,0,core.Ab(_v,18).disabled||null,\"NoopAnimations\"===core.Ab(_v,18)._animationMode)}))}function View_MarkdownPaneComponent_Host_0(_l){return core.Fb(0,[(_l()(),core.pb(0,0,null,null,1,\"app-markdown-pane\",[],null,null,null,View_MarkdownPaneComponent_0,RenderType_MarkdownPaneComponent)),core.ob(1,114688,null,0,MarkdownPaneComponent,[ngx_markdown_MarkdownService],null,null)],(function(_ck,_v){_ck(_v,1,0)}),null)}var MarkdownPaneComponentNgFactory=core.lb(\"app-markdown-pane\",MarkdownPaneComponent,View_MarkdownPaneComponent_Host_0,{},{},[]),concatMap=__webpack_require__(\"bOdf\");class HttpHeaders{constructor(headers){this.normalizedNames=new Map,this.lazyUpdate=null,headers?this.lazyInit=\"string\"==typeof headers?()=>{this.headers=new Map,headers.split(\"\\n\").forEach(line=>{const index=line.indexOf(\":\");if(index>0){const name=line.slice(0,index),key=name.toLowerCase(),value=line.slice(index+1).trim();this.maybeSetNormalizedName(name,key),this.headers.has(key)?this.headers.get(key).push(value):this.headers.set(key,[value])}})}:()=>{this.headers=new Map,Object.keys(headers).forEach(name=>{let values=headers[name];const key=name.toLowerCase();\"string\"==typeof values&&(values=[values]),values.length>0&&(this.headers.set(key,values),this.maybeSetNormalizedName(name,key))})}:this.headers=new Map}has(name){return this.init(),this.headers.has(name.toLowerCase())}get(name){this.init();const values=this.headers.get(name.toLowerCase());return values&&values.length>0?values[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(name){return this.init(),this.headers.get(name.toLowerCase())||null}append(name,value){return this.clone({name:name,value:value,op:\"a\"})}set(name,value){return this.clone({name:name,value:value,op:\"s\"})}delete(name,value){return this.clone({name:name,value:value,op:\"d\"})}maybeSetNormalizedName(name,lcName){this.normalizedNames.has(lcName)||this.normalizedNames.set(lcName,name)}init(){this.lazyInit&&(this.lazyInit instanceof HttpHeaders?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(update=>this.applyUpdate(update)),this.lazyUpdate=null))}copyFrom(other){other.init(),Array.from(other.headers.keys()).forEach(key=>{this.headers.set(key,other.headers.get(key)),this.normalizedNames.set(key,other.normalizedNames.get(key))})}clone(update){const clone=new HttpHeaders;return clone.lazyInit=this.lazyInit&&this.lazyInit instanceof HttpHeaders?this.lazyInit:this,clone.lazyUpdate=(this.lazyUpdate||[]).concat([update]),clone}applyUpdate(update){const key=update.name.toLowerCase();switch(update.op){case\"a\":case\"s\":let value=update.value;if(\"string\"==typeof value&&(value=[value]),0===value.length)return;this.maybeSetNormalizedName(update.name,key);const base=(\"a\"===update.op?this.headers.get(key):void 0)||[];base.push(...value),this.headers.set(key,base);break;case\"d\":const toDelete=update.value;if(toDelete){let existing=this.headers.get(key);if(!existing)return;0===(existing=existing.filter(value=>-1===toDelete.indexOf(value))).length?(this.headers.delete(key),this.normalizedNames.delete(key)):this.headers.set(key,existing)}else this.headers.delete(key),this.normalizedNames.delete(key)}}forEach(fn){this.init(),Array.from(this.normalizedNames.keys()).forEach(key=>fn(this.normalizedNames.get(key),this.headers.get(key)))}}class HttpUrlEncodingCodec{encodeKey(key){return standardEncoding(key)}encodeValue(value){return standardEncoding(value)}decodeKey(key){return decodeURIComponent(key)}decodeValue(value){return decodeURIComponent(value)}}function standardEncoding(v){return encodeURIComponent(v).replace(/%40/gi,\"@\").replace(/%3A/gi,\":\").replace(/%24/gi,\"$\").replace(/%2C/gi,\",\").replace(/%3B/gi,\";\").replace(/%2B/gi,\"+\").replace(/%3D/gi,\"=\").replace(/%3F/gi,\"?\").replace(/%2F/gi,\"/\")}class HttpParams{constructor(options={}){if(this.updates=null,this.cloneFrom=null,this.encoder=options.encoder||new HttpUrlEncodingCodec,options.fromString){if(options.fromObject)throw new Error(\"Cannot specify both fromString and fromObject.\");this.map=function(rawParams,codec){const map=new Map;return rawParams.length>0&&rawParams.split(\"&\").forEach(param=>{const eqIdx=param.indexOf(\"=\"),[key,val]=-1==eqIdx?[codec.decodeKey(param),\"\"]:[codec.decodeKey(param.slice(0,eqIdx)),codec.decodeValue(param.slice(eqIdx+1))],list=map.get(key)||[];list.push(val),map.set(key,list)}),map}(options.fromString,this.encoder)}else options.fromObject?(this.map=new Map,Object.keys(options.fromObject).forEach(key=>{const value=options.fromObject[key];this.map.set(key,Array.isArray(value)?value:[value])})):this.map=null}has(param){return this.init(),this.map.has(param)}get(param){this.init();const res=this.map.get(param);return res?res[0]:null}getAll(param){return this.init(),this.map.get(param)||null}keys(){return this.init(),Array.from(this.map.keys())}append(param,value){return this.clone({param:param,value:value,op:\"a\"})}set(param,value){return this.clone({param:param,value:value,op:\"s\"})}delete(param,value){return this.clone({param:param,value:value,op:\"d\"})}toString(){return this.init(),this.keys().map(key=>{const eKey=this.encoder.encodeKey(key);return this.map.get(key).map(value=>eKey+\"=\"+this.encoder.encodeValue(value)).join(\"&\")}).join(\"&\")}clone(update){const clone=new HttpParams({encoder:this.encoder});return clone.cloneFrom=this.cloneFrom||this,clone.updates=(this.updates||[]).concat([update]),clone}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(key=>this.map.set(key,this.cloneFrom.map.get(key))),this.updates.forEach(update=>{switch(update.op){case\"a\":case\"s\":const base=(\"a\"===update.op?this.map.get(update.param):void 0)||[];base.push(update.value),this.map.set(update.param,base);break;case\"d\":if(void 0===update.value){this.map.delete(update.param);break}{let base=this.map.get(update.param)||[];const idx=base.indexOf(update.value);-1!==idx&&base.splice(idx,1),base.length>0?this.map.set(update.param,base):this.map.delete(update.param)}}}),this.cloneFrom=this.updates=null)}}function isArrayBuffer(value){return\"undefined\"!=typeof ArrayBuffer&&value instanceof ArrayBuffer}function isBlob(value){return\"undefined\"!=typeof Blob&&value instanceof Blob}function isFormData(value){return\"undefined\"!=typeof FormData&&value instanceof FormData}class HttpRequest{constructor(method,url,third,fourth){let options;if(this.url=url,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType=\"json\",this.method=method.toUpperCase(),function(method){switch(method){case\"DELETE\":case\"GET\":case\"HEAD\":case\"OPTIONS\":case\"JSONP\":return!1;default:return!0}}(this.method)||fourth?(this.body=void 0!==third?third:null,options=fourth):options=third,options&&(this.reportProgress=!!options.reportProgress,this.withCredentials=!!options.withCredentials,options.responseType&&(this.responseType=options.responseType),options.headers&&(this.headers=options.headers),options.params&&(this.params=options.params)),this.headers||(this.headers=new HttpHeaders),this.params){const params=this.params.toString();if(0===params.length)this.urlWithParams=url;else{const qIdx=url.indexOf(\"?\");this.urlWithParams=url+(-1===qIdx?\"?\":qIdx<url.length-1?\"&\":\"\")+params}}else this.params=new HttpParams,this.urlWithParams=url}serializeBody(){return null===this.body?null:isArrayBuffer(this.body)||isBlob(this.body)||isFormData(this.body)||\"string\"==typeof this.body?this.body:this.body instanceof HttpParams?this.body.toString():\"object\"==typeof this.body||\"boolean\"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body?null:isFormData(this.body)?null:isBlob(this.body)?this.body.type||null:isArrayBuffer(this.body)?null:\"string\"==typeof this.body?\"text/plain\":this.body instanceof HttpParams?\"application/x-www-form-urlencoded;charset=UTF-8\":\"object\"==typeof this.body||\"number\"==typeof this.body||Array.isArray(this.body)?\"application/json\":null}clone(update={}){const method=update.method||this.method,url=update.url||this.url,responseType=update.responseType||this.responseType,body=void 0!==update.body?update.body:this.body,withCredentials=void 0!==update.withCredentials?update.withCredentials:this.withCredentials,reportProgress=void 0!==update.reportProgress?update.reportProgress:this.reportProgress;let headers=update.headers||this.headers,params=update.params||this.params;return void 0!==update.setHeaders&&(headers=Object.keys(update.setHeaders).reduce((headers,name)=>headers.set(name,update.setHeaders[name]),headers)),update.setParams&&(params=Object.keys(update.setParams).reduce((params,param)=>params.set(param,update.setParams[param]),params)),new HttpRequest(method,url,body,{params:params,headers:headers,reportProgress:reportProgress,responseType:responseType,withCredentials:withCredentials})}}const HttpEventType=function(){var HttpEventType={Sent:0,UploadProgress:1,ResponseHeader:2,DownloadProgress:3,Response:4,User:5};return HttpEventType[HttpEventType.Sent]=\"Sent\",HttpEventType[HttpEventType.UploadProgress]=\"UploadProgress\",HttpEventType[HttpEventType.ResponseHeader]=\"ResponseHeader\",HttpEventType[HttpEventType.DownloadProgress]=\"DownloadProgress\",HttpEventType[HttpEventType.Response]=\"Response\",HttpEventType[HttpEventType.User]=\"User\",HttpEventType}();class HttpResponseBase{constructor(init,defaultStatus=200,defaultStatusText=\"OK\"){this.headers=init.headers||new HttpHeaders,this.status=void 0!==init.status?init.status:defaultStatus,this.statusText=init.statusText||defaultStatusText,this.url=init.url||null,this.ok=this.status>=200&&this.status<300}}class HttpResponse extends HttpResponseBase{constructor(init={}){super(init),this.type=HttpEventType.Response,this.body=void 0!==init.body?init.body:null}clone(update={}){return new HttpResponse({body:void 0!==update.body?update.body:this.body,headers:update.headers||this.headers,status:void 0!==update.status?update.status:this.status,statusText:update.statusText||this.statusText,url:update.url||this.url||void 0})}}function addBody(options,body){return{body:body,headers:options.headers,observe:options.observe,params:options.params,reportProgress:options.reportProgress,responseType:options.responseType,withCredentials:options.withCredentials}}class http_HttpClient{constructor(handler){this.handler=handler}request(first,url,options={}){let req;if(first instanceof HttpRequest)req=first;else{let headers=void 0;headers=options.headers instanceof HttpHeaders?options.headers:new HttpHeaders(options.headers);let params=void 0;options.params&&(params=options.params instanceof HttpParams?options.params:new HttpParams({fromObject:options.params})),req=new HttpRequest(first,url,void 0!==options.body?options.body:null,{headers:headers,params:params,reportProgress:options.reportProgress,responseType:options.responseType||\"json\",withCredentials:options.withCredentials})}const events$=Object(of.a)(req).pipe(Object(concatMap.a)(req=>this.handler.handle(req)));if(first instanceof HttpRequest||\"events\"===options.observe)return events$;const res$=events$.pipe(Object(filter.a)(event=>event instanceof HttpResponse));switch(options.observe||\"body\"){case\"body\":switch(req.responseType){case\"arraybuffer\":return res$.pipe(Object(map.a)(res=>{if(null!==res.body&&!(res.body instanceof ArrayBuffer))throw new Error(\"Response is not an ArrayBuffer.\");return res.body}));case\"blob\":return res$.pipe(Object(map.a)(res=>{if(null!==res.body&&!(res.body instanceof Blob))throw new Error(\"Response is not a Blob.\");return res.body}));case\"text\":return res$.pipe(Object(map.a)(res=>{if(null!==res.body&&\"string\"!=typeof res.body)throw new Error(\"Response is not a string.\");return res.body}));case\"json\":default:return res$.pipe(Object(map.a)(res=>res.body))}case\"response\":return res$;default:throw new Error(`Unreachable: unhandled observe type ${options.observe}}`)}}delete(url,options={}){return this.request(\"DELETE\",url,options)}get(url,options={}){return this.request(\"GET\",url,options)}head(url,options={}){return this.request(\"HEAD\",url,options)}jsonp(url,callbackParam){return this.request(\"JSONP\",url,{params:(new HttpParams).append(callbackParam,\"JSONP_CALLBACK\"),observe:\"body\",responseType:\"json\"})}options(url,options={}){return this.request(\"OPTIONS\",url,options)}patch(url,body,options={}){return this.request(\"PATCH\",url,addBody(options,body))}post(url,body,options={}){return this.request(\"POST\",url,addBody(options,body))}put(url,body,options={}){return this.request(\"PUT\",url,addBody(options,body))}}var router=__webpack_require__(\"iInd\");class MarkdownPaneRoutingModule{}__webpack_require__.d(__webpack_exports__,\"MarkdownPaneModuleNgFactory\",(function(){return MarkdownPaneModuleNgFactory}));var MarkdownPaneModuleNgFactory=core.mb(MarkdownPaneModule,[],(function(_l){return core.xb([core.yb(512,core.j,core.Y,[[8,[router_ngfactory.a,MarkdownPaneComponentNgFactory]],[3,core.j],core.v]),core.yb(4608,common.i,common.h,[core.s,[2,common.p]]),core.yb(4608,fesm2015_forms.i,fesm2015_forms.i,[]),core.yb(4608,ngx_markdown_MarkdownService,ngx_markdown_MarkdownService,[core.z,[2,http_HttpClient],platform_browser.b,MarkedOptions]),core.yb(1073742336,common.b,common.b,[]),core.yb(1073742336,fesm2015_forms.h,fesm2015_forms.h,[]),core.yb(1073742336,fesm2015_forms.c,fesm2015_forms.c,[]),core.yb(1073742336,BidiModule,BidiModule,[]),core.yb(1073742336,core_MatCommonModule,core_MatCommonModule,[[2,MATERIAL_SANITY_CHECKS],[2,platform_browser.f]]),core.yb(1073742336,PlatformModule,PlatformModule,[]),core.yb(1073742336,MatRippleModule,MatRippleModule,[]),core.yb(1073742336,MatButtonModule,MatButtonModule,[]),core.yb(1073742336,router.l,router.l,[[2,router.q],[2,router.k]]),core.yb(1073742336,MarkdownPaneRoutingModule,MarkdownPaneRoutingModule,[]),core.yb(1073742336,MarkdownModule,MarkdownModule,[]),core.yb(1073742336,MarkdownPaneModule,MarkdownPaneModule,[]),core.yb(1024,router.i,(function(){return[[{path:\"\",component:MarkdownPaneComponent}]]}),[]),core.yb(256,MarkedOptions,{gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1},[])])}))}}]);\n//# sourceMappingURL=5-es2015.c09944ee52aadb7bb9c1.js.map","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noop,\n  table: noop,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} +')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noop, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    this.rules = block.gfm;\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      var lastToken = this.tokens[this.tokens.length - 1];\n      src = src.substring(cap[0].length);\n      // An indented code block cannot interrupt a paragraph.\n      if (lastToken && lastToken.type === 'paragraph') {\n        lastToken.text += '\\n' + cap[0].trimRight();\n      } else {\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic\n            ? rtrim(cap, '\\n')\n            : cap\n        });\n      }\n      continue;\n    }\n\n    // fences\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = 4 + cap[1].length + lastParenIndex;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function(text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, { renderer: new TextRenderer() })\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  this.token = this.tokens.pop();\n  return this.token;\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger() {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function(value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function(ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function(ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function(match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MarkdownPaneRoutingModule } from './markdown-pane-routing.module';\nimport { MarkdownPaneComponent } from './markdown-pane.component';\nimport { MarkdownModule } from 'ngx-markdown';\n\n@NgModule({\n  declarations: [MarkdownPaneComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MarkdownPaneRoutingModule,\n    MarkdownModule.forRoot()\n  ]\n})\nexport class MarkdownPaneModule {}\n","import { Pipe, SecurityContext, Injectable, Inject, PLATFORM_ID, Optional, EventEmitter, Component, ElementRef, Input, Output, NgZone, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Renderer, parse } from 'marked';\nimport { map, first } from 'rxjs/operators';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass LanguagePipe {\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} language\r\n     * @return {?}\r\n     */\r\n    transform(value, language) {\r\n        if (typeof value !== 'string') {\r\n            console.error(`LanguagePipe has been invoked with an invalid value type [${value}]`);\r\n            return value;\r\n        }\r\n        if (typeof language !== 'string') {\r\n            console.error(`LanguagePipe has been invoked with an invalid parameter [${language}]`);\r\n            return value;\r\n        }\r\n        return '```' + language + '\\n' + value + '\\n```';\r\n    }\r\n}\r\nLanguagePipe.decorators = [\r\n    { type: Pipe, args: [{\r\n                name: 'language',\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass MarkedOptions {\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass MarkedRenderer extends Renderer {\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// tslint:disable:max-line-length\r\n/** @type {?} */\r\nconst errorKatexNotLoaded = '[ngx-markdown When using the [katex] attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\r\n/** @type {?} */\r\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\r\n// tslint:enable:max-line-length\r\nclass MarkdownService {\r\n    /**\r\n     * @param {?} platform\r\n     * @param {?} http\r\n     * @param {?} domSanitizer\r\n     * @param {?} options\r\n     */\r\n    constructor(platform, http, domSanitizer, options) {\r\n        this.platform = platform;\r\n        this.http = http;\r\n        this.domSanitizer = domSanitizer;\r\n        this.options = options;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get options() { return this._options; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set options(value) {\r\n        this._options = Object.assign({}, { renderer: new MarkedRenderer() }, this._options, value);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get renderer() { return this.options.renderer; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set renderer(value) {\r\n        this.options.renderer = value;\r\n    }\r\n    /**\r\n     * @param {?} markdown\r\n     * @param {?=} decodeHtml\r\n     * @param {?=} markedOptions\r\n     * @return {?}\r\n     */\r\n    compile(markdown, decodeHtml = false, markedOptions = this.options) {\r\n        /** @type {?} */\r\n        let precompiled = this.trimIndentation(markdown);\r\n        precompiled = decodeHtml ? this.decodeHtml(precompiled) : precompiled;\r\n        /** @type {?} */\r\n        const compiled = parse(precompiled, markedOptions);\r\n        return markedOptions.sanitize && !markedOptions.sanitizer\r\n            ? this.domSanitizer.sanitize(SecurityContext.HTML, compiled)\r\n            : compiled;\r\n    }\r\n    /**\r\n     * @param {?} src\r\n     * @return {?}\r\n     */\r\n    getSource(src) {\r\n        if (!this.http) {\r\n            throw new Error(errorSrcWithoutHttpClient);\r\n        }\r\n        return this.http\r\n            .get(src, { responseType: 'text' })\r\n            .pipe(map((/**\r\n         * @param {?} markdown\r\n         * @return {?}\r\n         */\r\n        markdown => this.handleExtension(src, markdown))));\r\n    }\r\n    /**\r\n     * @param {?=} element\r\n     * @return {?}\r\n     */\r\n    highlight(element) {\r\n        if (isPlatformBrowser(this.platform) && typeof Prism !== 'undefined') {\r\n            if (!element) {\r\n                element = document;\r\n            }\r\n            /** @type {?} */\r\n            const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\r\n            Array.prototype.forEach.call(noLanguageElements, (/**\r\n             * @param {?} x\r\n             * @return {?}\r\n             */\r\n            (x) => x.classList.add('language-none')));\r\n            Prism.highlightAllUnder(element);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} html\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    renderKatex(html, options) {\r\n        if (typeof katex === 'undefined' || typeof katex.renderToString === 'undefined') {\r\n            throw new Error(errorKatexNotLoaded);\r\n        }\r\n        return html.replace(/\\$([^\\s][^$]*?[^\\s])\\$/gm, (/**\r\n         * @param {?} _\r\n         * @param {?} tex\r\n         * @return {?}\r\n         */\r\n        (_, tex) => katex.renderToString(tex, options)));\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} html\r\n     * @return {?}\r\n     */\r\n    decodeHtml(html) {\r\n        if (isPlatformBrowser(this.platform)) {\r\n            /** @type {?} */\r\n            const textarea = document.createElement('textarea');\r\n            textarea.innerHTML = html;\r\n            return textarea.value;\r\n        }\r\n        return html;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} src\r\n     * @param {?} markdown\r\n     * @return {?}\r\n     */\r\n    handleExtension(src, markdown) {\r\n        /** @type {?} */\r\n        const extension = src\r\n            ? src.split('?')[0].split('.').splice(-1).join()\r\n            : null;\r\n        return extension !== 'md'\r\n            ? '```' + extension + '\\n' + markdown + '\\n```'\r\n            : markdown;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} markdown\r\n     * @return {?}\r\n     */\r\n    trimIndentation(markdown) {\r\n        if (!markdown) {\r\n            return '';\r\n        }\r\n        /** @type {?} */\r\n        let indentStart;\r\n        return markdown\r\n            .split('\\n')\r\n            .map((/**\r\n         * @param {?} line\r\n         * @return {?}\r\n         */\r\n        line => {\r\n            /** @type {?} */\r\n            let lineIdentStart = indentStart;\r\n            if (line.length > 0) {\r\n                lineIdentStart = isNaN(lineIdentStart)\r\n                    ? line.search(/\\S|$/)\r\n                    : Math.min(line.search(/\\S|$/), lineIdentStart);\r\n            }\r\n            if (isNaN(indentStart)) {\r\n                indentStart = lineIdentStart;\r\n            }\r\n            return !!lineIdentStart\r\n                ? line.substring(lineIdentStart)\r\n                : line;\r\n        })).join('\\n');\r\n    }\r\n}\r\nMarkdownService.decorators = [\r\n    { type: Injectable }\r\n];\r\n/** @nocollapse */\r\nMarkdownService.ctorParameters = () => [\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\r\n    { type: HttpClient, decorators: [{ type: Optional }] },\r\n    { type: DomSanitizer },\r\n    { type: MarkedOptions }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nconst PrismPlugin = {\r\n    LineHighlight: 'line-highlight',\r\n    LineNumbers: 'line-numbers',\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass MarkdownComponent {\r\n    /**\r\n     * @param {?} element\r\n     * @param {?} markdownService\r\n     */\r\n    constructor(element, markdownService) {\r\n        this.element = element;\r\n        this.markdownService = markdownService;\r\n        this.error = new EventEmitter();\r\n        this.load = new EventEmitter();\r\n        this._katex = false;\r\n        this._lineHighlight = false;\r\n        this._lineNumbers = false;\r\n    }\r\n    // Plugin - katex\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get katex() { return this._katex; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set katex(value) { this._katex = this.coerceBooleanProperty(value); }\r\n    // Plugin - lineNumbers\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get lineNumbers() { return this._lineNumbers; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set lineNumbers(value) { this._lineNumbers = this.coerceBooleanProperty(value); }\r\n    // Plugin - lineHighlight\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get lineHighlight() { return this._lineHighlight; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set lineHighlight(value) { this._lineHighlight = this.coerceBooleanProperty(value); }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnChanges() {\r\n        if (this.data != null) {\r\n            this.handleData();\r\n            return;\r\n        }\r\n        if (this.src != null) {\r\n            this.handleSrc();\r\n            return;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.data && !this.src) {\r\n            this.handleTransclusion();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} markdown\r\n     * @param {?=} decodeHtml\r\n     * @return {?}\r\n     */\r\n    render(markdown, decodeHtml = false) {\r\n        /** @type {?} */\r\n        let compiled = this.markdownService.compile(markdown, decodeHtml);\r\n        compiled = this.katex ? this.markdownService.renderKatex(compiled, this.katexOptions) : compiled;\r\n        this.element.nativeElement.innerHTML = compiled;\r\n        this.handlePlugins();\r\n        this.markdownService.highlight(this.element.nativeElement);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    coerceBooleanProperty(value) {\r\n        return value != null && `${value}` !== 'false';\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    handleData() {\r\n        this.render(this.data);\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    handleSrc() {\r\n        this.markdownService\r\n            .getSource(this.src)\r\n            .subscribe((/**\r\n         * @param {?} markdown\r\n         * @return {?}\r\n         */\r\n        markdown => {\r\n            this.render(markdown);\r\n            this.load.emit(markdown);\r\n        }), (/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        error => this.error.emit(error)));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    handleTransclusion() {\r\n        this.render(this.element.nativeElement.innerHTML, true);\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    handlePlugins() {\r\n        if (this.lineHighlight) {\r\n            this.setPluginClass(this.element.nativeElement, PrismPlugin.LineHighlight);\r\n            this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\r\n        }\r\n        if (this.lineNumbers) {\r\n            this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\r\n            this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} element\r\n     * @param {?} plugin\r\n     * @return {?}\r\n     */\r\n    setPluginClass(element, plugin) {\r\n        /** @type {?} */\r\n        const preElements = element.querySelectorAll('pre');\r\n        for (let i = 0; i < preElements.length; i++) {\r\n            /** @type {?} */\r\n            const classes = plugin instanceof Array ? plugin : [plugin];\r\n            preElements.item(i).classList.add(...classes);\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} element\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    setPluginOptions(element, options) {\r\n        /** @type {?} */\r\n        const preElements = element.querySelectorAll('pre');\r\n        for (let i = 0; i < preElements.length; i++) {\r\n            Object.keys(options).forEach((/**\r\n             * @param {?} option\r\n             * @return {?}\r\n             */\r\n            option => {\r\n                /** @type {?} */\r\n                const attributeValue = options[option];\r\n                if (!!attributeValue) {\r\n                    /** @type {?} */\r\n                    const attributeName = this.toLispCase(option);\r\n                    preElements.item(i).setAttribute(attributeName, attributeValue.toString());\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    toLispCase(value) {\r\n        /** @type {?} */\r\n        const upperChars = value.match(/([A-Z])/g);\r\n        if (!upperChars) {\r\n            return value;\r\n        }\r\n        /** @type {?} */\r\n        let str = value.toString();\r\n        for (let i = 0, n = upperChars.length; i < n; i++) {\r\n            str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\r\n        }\r\n        if (str.slice(0, 1) === '-') {\r\n            str = str.slice(1);\r\n        }\r\n        return str;\r\n    }\r\n}\r\nMarkdownComponent.decorators = [\r\n    { type: Component, args: [{\r\n                // tslint:disable-next-line:component-selector\r\n                selector: 'markdown, [markdown]',\r\n                template: '<ng-content></ng-content>'\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nMarkdownComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: MarkdownService }\r\n];\r\nMarkdownComponent.propDecorators = {\r\n    data: [{ type: Input }],\r\n    src: [{ type: Input }],\r\n    katex: [{ type: Input }],\r\n    katexOptions: [{ type: Input }],\r\n    lineNumbers: [{ type: Input }],\r\n    start: [{ type: Input }],\r\n    lineHighlight: [{ type: Input }],\r\n    line: [{ type: Input }],\r\n    lineOffset: [{ type: Input }],\r\n    error: [{ type: Output }],\r\n    load: [{ type: Output }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass MarkdownPipe {\r\n    /**\r\n     * @param {?} elementRef\r\n     * @param {?} markdownService\r\n     * @param {?} zone\r\n     */\r\n    constructor(elementRef, markdownService, zone) {\r\n        this.elementRef = elementRef;\r\n        this.markdownService = markdownService;\r\n        this.zone = zone;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        if (value == null) {\r\n            return '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            console.error(`MarkdownPipe has been invoked with an invalid value type [${value}]`);\r\n            return value;\r\n        }\r\n        /** @type {?} */\r\n        const markdown = this.markdownService.compile(value);\r\n        this.zone.onStable\r\n            .pipe(first())\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        () => this.markdownService.highlight(this.elementRef.nativeElement)));\r\n        return markdown;\r\n    }\r\n}\r\nMarkdownPipe.decorators = [\r\n    { type: Pipe, args: [{\r\n                name: 'markdown',\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nMarkdownPipe.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: MarkdownService },\r\n    { type: NgZone }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nconst ɵ0 = {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n};\r\n/** @type {?} */\r\nconst initialMarkedOptions = {\r\n    provide: MarkedOptions,\r\n    useValue: ɵ0,\r\n};\r\n/** @type {?} */\r\nconst sharedDeclarations = [\r\n    LanguagePipe,\r\n    MarkdownComponent,\r\n    MarkdownPipe,\r\n];\r\nclass MarkdownModule {\r\n    /**\r\n     * @param {?=} markdownModuleConfig\r\n     * @return {?}\r\n     */\r\n    static forRoot(markdownModuleConfig) {\r\n        return {\r\n            ngModule: MarkdownModule,\r\n            providers: [\r\n                MarkdownService,\r\n                markdownModuleConfig && markdownModuleConfig.loader || [],\r\n                markdownModuleConfig && markdownModuleConfig.markedOptions || initialMarkedOptions,\r\n            ],\r\n        };\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static forChild() {\r\n        return {\r\n            ngModule: MarkdownModule,\r\n        };\r\n    }\r\n}\r\nMarkdownModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                exports: sharedDeclarations,\r\n                declarations: sharedDeclarations,\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { LanguagePipe, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, MarkedOptions, MarkedRenderer, PrismPlugin, errorKatexNotLoaded, errorSrcWithoutHttpClient, initialMarkedOptions };\n//# sourceMappingURL=ngx-markdown.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-markdown\";\nvar MarkdownModuleNgFactory = i0.ɵcmf(i1.MarkdownModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i1.MarkdownModule, i1.MarkdownModule, [])]); });\nexport { MarkdownModuleNgFactory as MarkdownModuleNgFactory };\nvar styles_MarkdownComponent = [];\nvar RenderType_MarkdownComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_MarkdownComponent, data: {} });\nexport { RenderType_MarkdownComponent as RenderType_MarkdownComponent };\nexport function View_MarkdownComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }\nexport function View_MarkdownComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"markdown\", [], null, null, null, View_MarkdownComponent_0, RenderType_MarkdownComponent)), i0.ɵdid(1, 4767744, null, 0, i1.MarkdownComponent, [i0.ElementRef, i1.MarkdownService], null, null)], null, null); }\nvar MarkdownComponentNgFactory = i0.ɵccf(\"markdown, [markdown]\", i1.MarkdownComponent, View_MarkdownComponent_Host_0, { data: \"data\", src: \"src\", katex: \"katex\", katexOptions: \"katexOptions\", lineNumbers: \"lineNumbers\", start: \"start\", lineHighlight: \"lineHighlight\", line: \"line\", lineOffset: \"lineOffset\" }, { error: \"error\", load: \"load\" }, [\"*\"]);\nexport { MarkdownComponentNgFactory as MarkdownComponentNgFactory };\n","<ng-content></ng-content>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of the Angular Component Development Kit.\n * @type {?}\n */\nconst VERSION = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat((/** @type {?} */ (value)))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n * @template T\n * @param {?} elementOrRef\n * @return {?}\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue, coerceElement };\n//# sourceMappingURL=coercion.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ngInjectableDef = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.decorators = [\n    { type: NgModule, args: [{},] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, normalizePassiveListenerOptions, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType, _supportsShadowDom };\n//# sourceMappingURL=platform.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, SkipSelf, QueryList, Directive, ElementRef, Input, NgZone, isDevMode, InjectionToken, EventEmitter, Output, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { debounceTime, filter, map, tap, take } from 'rxjs/operators';\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nconst ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.ngInjectableDef = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [new Optional(), new SkipSelf(), AriaDescriber],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} keyCode\n         * @return {?}\n         */\n        keyCode => (/** @type {?} */ (this))._pressedLetters.push(keyCode))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    updateActiveItemIndex(index) {\n        this.updateActiveItem(index);\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.ngInjectableDef = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus',\n            },] },\n];\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ngInjectableDef = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive',\n            },] },\n];\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentAnnouncer\n * @param {?} liveElement\n * @param {?} _document\n * @param {?} ngZone\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentAnnouncer, liveElement, _document, ngZone) {\n    return parentAnnouncer || new LiveAnnouncer(liveElement, ngZone, _document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new Optional(), new SkipSelf(), LiveAnnouncer],\n        [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        DOCUMENT,\n        NgZone,\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n            // will have their `target` set to the shadow root. If available, use `composedPath` to\n            // figure out the event target.\n            this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            let cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        let info = {\n            unlisten: (/**\n             * @return {?}\n             */\n            () => { }),\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        let focusListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onFocus(event, nativeElement));\n        /** @type {?} */\n        let blurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onBlur(event, nativeElement));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        }));\n        // Create an unlisten function for later.\n        info.unlisten = (/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        });\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            this._originTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._origin = null), 1);\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        let origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ FocusMonitor.ngInjectableDef = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n            },] },\n];\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n}\nA11yModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ARIA_DESCRIBER_PROVIDER_FACTORY, MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, CdkTrapFocus, InteractivityChecker, LIVE_ANNOUNCER_PROVIDER_FACTORY, LiveAnnouncer, CdkAriaLive, LIVE_ANNOUNCER_PROVIDER, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_DEFAULT_OPTIONS, FOCUS_MONITOR_PROVIDER_FACTORY, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule };\n//# sourceMappingURL=a11y.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, ɵɵdefineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION } from '@angular/cdk';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nconst VERSION$1 = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$2 = new Version('8.2.3');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     * @param {?=} _hammerLoader\n     */\n    constructor(_sanityChecksEnabled, _hammerLoader) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        this._hammerLoader = _hammerLoader;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @private\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        if (VERSION$2.full !== VERSION.full) {\n            console.warn('The Angular Material version (' + VERSION$2.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !((/** @type {?} */ (this._window)))['Hammer'] && !this._hammerLoader) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule],\n                exports: [BidiModule],\n            },] },\n];\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ],\n            },] },\n];\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.decorators = [\n    { type: Injectable },\n];\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            },] },\n];\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = RippleState.HIDDEN;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            },] },\n];\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.decorators = [\n    { type: Component, args: [{encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.decorators = [\n    { type: Component, args: [{selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId',\n                }\n            },] },\n];\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.decorators = [\n    { type: Component, args: [{selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option',\n                },\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION$1 as VERSION, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n//# sourceMappingURL=core.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatRipple, mixinColor, mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.decorators = [\n    { type: Component, args: [{selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-focus-overlay,.mat-stroked-button .mat-button-ripple.mat-ripple{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:#fff}}@media (-ms-high-contrast:black-on-white){.mat-button-focus-overlay{background-color:#000}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple, { static: false },] }]\n};\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.decorators = [\n    { type: Component, args: [{selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-focus-overlay,.mat-stroked-button .mat-button-ripple.mat-ripple{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:#fff}}@media (-ms-high-contrast:black-on-white){.mat-button-focus-overlay{background-color:#000}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatButtonModule, MatButton, MatAnchor };\n//# sourceMappingURL=button.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ngInjectableDef = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.decorators = [\n    { type: Directive, args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir',\n            },] },\n];\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [Dir],\n                declarations: [Dir],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n//# sourceMappingURL=bidi.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"@angular/cdk/platform\";\nimport * as i7 from \"@angular/platform-browser/animations\";\nimport * as i8 from \"@angular/cdk/a11y\";\nvar MatButtonModuleNgFactory = i0.ɵcmf(i1.MatButtonModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(1073742336, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS], [2, i5.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i6.PlatformModule, i6.PlatformModule, []), i0.ɵmpd(1073742336, i4.MatRippleModule, i4.MatRippleModule, []), i0.ɵmpd(1073742336, i1.MatButtonModule, i1.MatButtonModule, [])]); });\nexport { MatButtonModuleNgFactory as MatButtonModuleNgFactory };\nvar styles_MatButton = [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-focus-overlay,.mat-stroked-button .mat-button-ripple.mat-ripple{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:#fff}}@media (-ms-high-contrast:black-on-white){.mat-button-focus-overlay{background-color:#000}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"];\nvar RenderType_MatButton = i0.ɵcrt({ encapsulation: 2, styles: styles_MatButton, data: {} });\nexport { RenderType_MatButton as RenderType_MatButton };\nexport function View_MatButton_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { ripple: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"mat-button-wrapper\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"mat-button-ripple mat-ripple\"], [\"matRipple\", \"\"]], [[2, \"mat-button-ripple-round\", null], [2, \"mat-ripple-unbounded\", null]], null, null, null, null)), i0.ɵdid(4, 212992, [[1, 4]], 0, i4.MatRipple, [i0.ElementRef, i0.NgZone, i6.Platform, [2, i4.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i7.ANIMATION_MODULE_TYPE]], { centered: [0, \"centered\"], disabled: [1, \"disabled\"], trigger: [2, \"trigger\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-button-focus-overlay\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.isIconButton; var currVal_3 = _co._isRippleDisabled(); var currVal_4 = _co._getHostElement(); _ck(_v, 4, 0, currVal_2, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.isRoundButton || _co.isIconButton); var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); }); }\nexport function View_MatButton_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"button\", [[\"mat-button\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, View_MatButton_0, RenderType_MatButton)), i0.ɵdid(1, 180224, null, 0, i1.MatButton, [i0.ElementRef, i8.FocusMonitor, [2, i7.ANIMATION_MODULE_TYPE]], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).disabled || null); var currVal_1 = (i0.ɵnov(_v, 1)._animationMode === \"NoopAnimations\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatButtonNgFactory = i0.ɵccf(\"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\", i1.MatButton, View_MatButton_Host_0, { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, {}, [\"*\"]);\nexport { MatButtonNgFactory as MatButtonNgFactory };\nvar styles_MatAnchor = [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-focus-overlay,.mat-stroked-button .mat-button-ripple.mat-ripple{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:#fff}}@media (-ms-high-contrast:black-on-white){.mat-button-focus-overlay{background-color:#000}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"];\nvar RenderType_MatAnchor = i0.ɵcrt({ encapsulation: 2, styles: styles_MatAnchor, data: {} });\nexport { RenderType_MatAnchor as RenderType_MatAnchor };\nexport function View_MatAnchor_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { ripple: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"mat-button-wrapper\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"mat-button-ripple mat-ripple\"], [\"matRipple\", \"\"]], [[2, \"mat-button-ripple-round\", null], [2, \"mat-ripple-unbounded\", null]], null, null, null, null)), i0.ɵdid(4, 212992, [[1, 4]], 0, i4.MatRipple, [i0.ElementRef, i0.NgZone, i6.Platform, [2, i4.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i7.ANIMATION_MODULE_TYPE]], { centered: [0, \"centered\"], disabled: [1, \"disabled\"], trigger: [2, \"trigger\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-button-focus-overlay\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.isIconButton; var currVal_3 = _co._isRippleDisabled(); var currVal_4 = _co._getHostElement(); _ck(_v, 4, 0, currVal_2, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.isRoundButton || _co.isIconButton); var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); }); }\nexport function View_MatAnchor_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"a\", [[\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_MatAnchor_0, RenderType_MatAnchor)), i0.ɵdid(1, 180224, null, 0, i1.MatAnchor, [i8.FocusMonitor, i0.ElementRef, [2, i7.ANIMATION_MODULE_TYPE]], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).disabled ? (0 - 1) : (i0.ɵnov(_v, 1).tabIndex || 0)); var currVal_1 = (i0.ɵnov(_v, 1).disabled || null); var currVal_2 = i0.ɵnov(_v, 1).disabled.toString(); var currVal_3 = (i0.ɵnov(_v, 1)._animationMode === \"NoopAnimations\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nvar MatAnchorNgFactory = i0.ɵccf(\"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\", i1.MatAnchor, View_MatAnchor_Host_0, { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, {}, [\"*\"]);\nexport { MatAnchorNgFactory as MatAnchorNgFactory };\n","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","import { Component, OnInit } from '@angular/core';\nimport { MarkdownService } from 'ngx-markdown';\n\n@Component({\n  selector: 'app-markdown-pane',\n  templateUrl: './markdown-pane.component.html',\n  styleUrls: ['./markdown-pane.component.scss']\n})\nexport class MarkdownPaneComponent implements OnInit {\n  content = '';\n\n  constructor(private markdownService: MarkdownService) {}\n\n  ngOnInit() {}\n\n  insert() {\n    const html = this.markdownService.compile(this.content);\n    console.log(html);\n    Office.context.mailbox.item.body.setSelectedDataAsync(html, {\n      coercionType: Office.CoercionType.Html\n    });\n  }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./markdown-pane.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../node_modules/ngx-markdown/ngx-markdown.ngfactory\";\nimport * as i4 from \"ngx-markdown\";\nimport * as i5 from \"../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/cdk/a11y\";\nimport * as i8 from \"@angular/platform-browser/animations\";\nimport * as i9 from \"./markdown-pane.component\";\nvar styles_MarkdownPaneComponent = [i0.styles];\nvar RenderType_MarkdownPaneComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_MarkdownPaneComponent, data: {} });\nexport { RenderType_MarkdownPaneComponent as RenderType_MarkdownPaneComponent };\nexport function View_MarkdownPaneComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 19, \"section\", [[\"style\", \"display:flex; flex-direction: column; width: 98%; height: 100%; margin: 0; padding: 0\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 8, \"section\", [[\"style\", \"height: 100%; display: flex; flex-direction: column;\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Markdown\"])), (_l()(), i1.ɵeld(4, 0, null, null, 5, \"textarea\", [[\"style\", \"width:100%; height: 100%;\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"], [null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 5)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 5).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 5)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 5)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_4 = ((_co.content = $event) !== false);\n        ad = (pd_4 && ad);\n    } return ad; }, null, null)), i1.ɵdid(5, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(7, 671744, null, 0, i2.NgModel, [[8, null], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR]], { model: [0, \"model\"] }, { update: \"ngModelChange\" }), i1.ɵprd(2048, null, i2.NgControl, null, [i2.NgModel]), i1.ɵdid(9, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(10, 0, null, null, 5, \"section\", [[\"style\", \"height: 100%; display: flex; flex-direction: column;\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Preview\"])), (_l()(), i1.ɵeld(13, 0, null, null, 2, \"div\", [[\"style\", \"border: 1px solid #000; width: 100%; height: 100%; overflow: auto;\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 1, \"markdown\", [], null, null, null, i3.View_MarkdownComponent_0, i3.RenderType_MarkdownComponent)), i1.ɵdid(15, 4767744, null, 0, i4.MarkdownComponent, [i1.ElementRef, i4.MarkdownService], { data: [0, \"data\"] }, null), (_l()(), i1.ɵeld(16, 0, null, null, 3, \"section\", [[\"class\", \"ms-Fabric\"], [\"style\", \"padding: 5px;\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(17, 0, null, null, 2, \"button\", [[\"color\", \"primary\"], [\"mat-raised-button\", \"\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.insert() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i5.View_MatButton_0, i5.RenderType_MatButton)), i1.ɵdid(18, 180224, null, 0, i6.MatButton, [i1.ElementRef, i7.FocusMonitor, [2, i8.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"Insert\"]))], function (_ck, _v) { var _co = _v.component; var currVal_7 = _co.content; _ck(_v, 7, 0, currVal_7); var currVal_8 = _co.content; _ck(_v, 15, 0, currVal_8); var currVal_11 = \"primary\"; _ck(_v, 18, 0, currVal_11); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 9).ngClassUntouched; var currVal_1 = i1.ɵnov(_v, 9).ngClassTouched; var currVal_2 = i1.ɵnov(_v, 9).ngClassPristine; var currVal_3 = i1.ɵnov(_v, 9).ngClassDirty; var currVal_4 = i1.ɵnov(_v, 9).ngClassValid; var currVal_5 = i1.ɵnov(_v, 9).ngClassInvalid; var currVal_6 = i1.ɵnov(_v, 9).ngClassPending; _ck(_v, 4, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); var currVal_9 = (i1.ɵnov(_v, 18).disabled || null); var currVal_10 = (i1.ɵnov(_v, 18)._animationMode === \"NoopAnimations\"); _ck(_v, 17, 0, currVal_9, currVal_10); }); }\nexport function View_MarkdownPaneComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-markdown-pane\", [], null, null, null, View_MarkdownPaneComponent_0, RenderType_MarkdownPaneComponent)), i1.ɵdid(1, 114688, null, 0, i9.MarkdownPaneComponent, [i4.MarkdownService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MarkdownPaneComponentNgFactory = i1.ɵccf(\"app-markdown-pane\", i9.MarkdownPaneComponent, View_MarkdownPaneComponent_Host_0, {}, {}, []);\nexport { MarkdownPaneComponentNgFactory as MarkdownPaneComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<section style=\"display:flex; flex-direction: column; width: 98%; height: 100%; margin: 0; padding: 0\">\n  <section style=\"height: 100%; display: flex; flex-direction: column;\">\n    <h1>Markdown</h1>\n    <textarea style=\"width:100%; height: 100%;\" [(ngModel)]=\"content\"></textarea>\n  </section>\n  <section style=\"height: 100%; display: flex; flex-direction: column;\">\n    <h1>Preview</h1>\n    <div style=\"border: 1px solid #000; width: 100%; height: 100%; overflow: auto;\">\n      <markdown [data]=\"content\"></markdown>\n    </div>\n  </section>\n  <section style=\"padding: 5px;\" class=\"ms-Fabric\">\n    <button (click)=\"insert()\" mat-raised-button color=\"primary\">Insert</button>\n  </section>\n</section>\n","/**\n * @license Angular v8.2.14\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpHandler {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpBackend {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction Update() { }\nif (false) {\n    /** @type {?} */\n    Update.prototype.name;\n    /** @type {?|undefined} */\n    Update.prototype.value;\n    /** @type {?} */\n    Update.prototype.op;\n}\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * \\@publicApi\n */\nclass HttpHeaders {\n    /**\n     * Constructs a new HTTP header object with the given values.\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach((/**\n                 * @param {?} line\n                 * @return {?}\n                 */\n                line => {\n                    /** @type {?} */\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        /** @type {?} */\n                        const name = line.slice(0, index);\n                        /** @type {?} */\n                        const key = name.toLowerCase();\n                        /** @type {?} */\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            (/** @type {?} */ (this.headers.get(key))).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                }));\n            });\n        }\n        else {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach((/**\n                 * @param {?} name\n                 * @return {?}\n                 */\n                name => {\n                    /** @type {?} */\n                    let values = headers[name];\n                    /** @type {?} */\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                }));\n            });\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param {?} name The header name to check for existence.\n     *\n     * @return {?} True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param {?} name The header name.\n     *\n     * @return {?} The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        /** @type {?} */\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @return {?} A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param {?} name The header name from which to retrieve values.\n     *\n     * @return {?} A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param {?} name The header name for which to append the value or values.\n     * @param {?} value The new value or array of values.\n     *\n     * @return {?} A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param {?} name The header name.\n     * @param {?} value The value or values to set or overide for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param {?} name The header name.\n     * @param {?=} value The value or values to delete for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    /**\n     * @private\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach((/**\n                 * @param {?} update\n                 * @return {?}\n                 */\n                update => this.applyUpdate(update)));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} other\n     * @return {?}\n     */\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            this.headers.set(key, (/** @type {?} */ (other.headers.get(key))));\n            this.normalizedNames.set(key, (/** @type {?} */ (other.normalizedNames.get(key))));\n        }));\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    applyUpdate(update) {\n        /** @type {?} */\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                /** @type {?} */\n                let value = (/** @type {?} */ (update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                /** @type {?} */\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                /** @type {?} */\n                const toDelete = (/** @type {?} */ (update.value));\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    /** @type {?} */\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter((/**\n                     * @param {?} value\n                     * @return {?}\n                     */\n                    value => toDelete.indexOf(value) === -1));\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => fn((/** @type {?} */ (this.normalizedNames.get(key))), (/** @type {?} */ (this.headers.get(key))))));\n    }\n}\nif (false) {\n    /**\n     * Internal map of lowercase header names to values.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.headers;\n    /**\n     * Internal map of lowercased header names to the normalized\n     * form of the name (the form seen first).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.normalizedNames;\n    /**\n     * Complete the lazy initialization of this object (needed before reading).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyInit;\n    /**\n     * Queued updates to be materialized the next initialization.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyUpdate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n * \\@publicApi\n *\n * @record\n */\nfunction HttpParameterCodec() { }\nif (false) {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeValue = function (value) { };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeValue = function (value) { };\n}\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * \\@publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param {?} key The key name.\n     * @return {?} The encoded key name.\n     */\n    encodeKey(key) { return standardEncoding(key); }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param {?} value The value.\n     * @return {?} The encoded value.\n     */\n    encodeValue(value) { return standardEncoding(value); }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param {?} key The encoded key name.\n     * @return {?} The decoded key name.\n     */\n    decodeKey(key) { return decodeURIComponent(key); }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param {?} value The encoded value.\n     * @return {?} The decoded value.\n     */\n    decodeValue(value) { return decodeURIComponent(value); }\n}\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    /** @type {?} */\n    const map = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((/**\n         * @param {?} param\n         * @return {?}\n         */\n        (param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            /** @type {?} */\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        }));\n    }\n    return map;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * @record\n */\nfunction Update$1() { }\nif (false) {\n    /** @type {?} */\n    Update$1.prototype.param;\n    /** @type {?|undefined} */\n    Update$1.prototype.value;\n    /** @type {?} */\n    Update$1.prototype.op;\n}\n/**\n * Options used to construct an `HttpParams` instance.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpParamsOptions() { }\nif (false) {\n    /**\n     * String representation of the HTTP parameters in URL-query-string format.\n     * Mutually exclusive with `fromObject`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromString;\n    /**\n     * Object map of the HTTP parameters. Mutually exclusive with `fromString`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromObject;\n    /**\n     * Encoding codec used to parse and serialize the parameters.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.encoder;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * \\@publicApi\n */\nclass HttpParams {\n    /**\n     * @param {?=} options\n     */\n    constructor(options = (/** @type {?} */ ({}))) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => {\n                /** @type {?} */\n                const value = ((/** @type {?} */ (options.fromObject)))[key];\n                (/** @type {?} */ (this.map)).set(key, Array.isArray(value) ? value : [value]);\n            }));\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param {?} param The parameter name.\n     * @return {?} True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param {?} param The parameter name.\n     * @return {?} The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        /** @type {?} */\n        const res = (/** @type {?} */ (this.map)).get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param {?} param The parameter name.\n     * @return {?} All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @return {?} The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from((/** @type {?} */ (this.map)).keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value to add.\n     * @return {?} A new body with the appended value.\n     */\n    append(param, value) { return this.clone({ param, value, op: 'a' }); }\n    /**\n     * Replaces the value for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value.\n     * @return {?} A new body with the new value.\n     */\n    set(param, value) { return this.clone({ param, value, op: 's' }); }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param {?} param The parameter name.\n     * @param {?=} value The value to remove, if provided.\n     * @return {?} A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) { return this.clone({ param, value, op: 'd' }); }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const eKey = this.encoder.encodeKey(key);\n            return (/** @type {?} */ ((/** @type {?} */ (this.map)).get(key))).map((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => eKey + '=' + this.encoder.encodeValue(value)))\n                .join('&');\n        }))\n            .join('&');\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpParams((/** @type {?} */ ({ encoder: this.encoder })));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => (/** @type {?} */ (this.map)).set(key, (/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ (this.cloneFrom)).map)).get(key))))));\n            (/** @type {?} */ (this.updates)).forEach((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        /** @type {?} */\n                        const base = (update.op === 'a' ? (/** @type {?} */ (this.map)).get(update.param) : undefined) || [];\n                        base.push((/** @type {?} */ (update.value)));\n                        (/** @type {?} */ (this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            /** @type {?} */\n                            let base = (/** @type {?} */ (this.map)).get(update.param) || [];\n                            /** @type {?} */\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                (/** @type {?} */ (this.map)).set(update.param, base);\n                            }\n                            else {\n                                (/** @type {?} */ (this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            (/** @type {?} */ (this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            }));\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.map;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.encoder;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.updates;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.cloneFrom;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Construction interface for `HttpRequest`s.\n *\n * All values are optional and will override default values if provided.\n * @record\n */\nfunction HttpRequestInit() { }\nif (false) {\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.headers;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.reportProgress;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.params;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.responseType;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.withCredentials;\n}\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpRequest {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        /** @type {?} */\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? (/** @type {?} */ (third)) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = (/** @type {?} */ (third));\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            /** @type {?} */\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                /** @type {?} */\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                /** @type {?} */\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((/** @type {?} */ (this.body))).toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        /** @type {?} */\n        const method = update.method || this.method;\n        /** @type {?} */\n        const url = update.url || this.url;\n        /** @type {?} */\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        /** @type {?} */\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        /** @type {?} */\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        /** @type {?} */\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        /** @type {?} */\n        let headers = update.headers || this.headers;\n        /** @type {?} */\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((/**\n                 * @param {?} headers\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (headers, name) => headers.set(name, (/** @type {?} */ (update.setHeaders))[name])), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((/**\n             * @param {?} params\n             * @param {?} param\n             * @return {?}\n             */\n            (params, param) => params.set(param, (/** @type {?} */ (update.setParams))[param])), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params, headers, reportProgress, responseType, withCredentials,\n        });\n    }\n}\nif (false) {\n    /**\n     * The request body, or `null` if one isn't set.\n     *\n     * Bodies are not enforced to be immutable, as they can include a reference to any\n     * user-defined data type. However, interceptors should take care to preserve\n     * idempotence by treating them as such.\n     * @type {?}\n     */\n    HttpRequest.prototype.body;\n    /**\n     * Outgoing headers for this request.\n     * @type {?}\n     */\n    HttpRequest.prototype.headers;\n    /**\n     * Whether this request should be made in a way that exposes progress events.\n     *\n     * Progress events are expensive (change detection runs on each event) and so\n     * they should only be requested if the consumer intends to monitor them.\n     * @type {?}\n     */\n    HttpRequest.prototype.reportProgress;\n    /**\n     * Whether this request should be sent with outgoing credentials (cookies).\n     * @type {?}\n     */\n    HttpRequest.prototype.withCredentials;\n    /**\n     * The expected response type of the server.\n     *\n     * This is used to parse the response appropriately before returning it to\n     * the requestee.\n     * @type {?}\n     */\n    HttpRequest.prototype.responseType;\n    /**\n     * The outgoing HTTP request method.\n     * @type {?}\n     */\n    HttpRequest.prototype.method;\n    /**\n     * Outgoing URL parameters.\n     * @type {?}\n     */\n    HttpRequest.prototype.params;\n    /**\n     * The outgoing URL with all URL parameters set.\n     * @type {?}\n     */\n    HttpRequest.prototype.urlWithParams;\n    /** @type {?} */\n    HttpRequest.prototype.url;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HttpEventType = {\n    /**\n     * The request was sent out over the wire.\n     */\n    Sent: 0,\n    /**\n     * An upload progress event was received.\n     */\n    UploadProgress: 1,\n    /**\n     * The response status code and headers were received.\n     */\n    ResponseHeader: 2,\n    /**\n     * A download progress event was received.\n     */\n    DownloadProgress: 3,\n    /**\n     * The full response including the body was received.\n     */\n    Response: 4,\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = 'Sent';\nHttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';\nHttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';\nHttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';\nHttpEventType[HttpEventType.Response] = 'Response';\nHttpEventType[HttpEventType.User] = 'User';\n/**\n * Base interface for progress events.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpProgressEvent() { }\nif (false) {\n    /**\n     * Progress event type is either upload or download.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.type;\n    /**\n     * Number of bytes uploaded or downloaded.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.loaded;\n    /**\n     * Total number of bytes to upload or download. Depending on the request or\n     * response, this may not be computable and thus may not be present.\n     * @type {?|undefined}\n     */\n    HttpProgressEvent.prototype.total;\n}\n/**\n * A download progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpDownloadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpDownloadProgressEvent.prototype.type;\n    /**\n     * The partial response body as downloaded so far.\n     *\n     * Only present if the responseType was `text`.\n     * @type {?|undefined}\n     */\n    HttpDownloadProgressEvent.prototype.partialText;\n}\n/**\n * An upload progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpUploadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUploadProgressEvent.prototype.type;\n}\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpSentEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpSentEvent.prototype.type;\n}\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nfunction HttpUserEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUserEvent.prototype.type;\n}\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n *\n * @record\n */\nfunction HttpJsonParseError() { }\nif (false) {\n    /** @type {?} */\n    HttpJsonParseError.prototype.error;\n    /** @type {?} */\n    HttpJsonParseError.prototype.text;\n}\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\nif (false) {\n    /**\n     * All response headers.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.headers;\n    /**\n     * Response status code.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.status;\n    /**\n     * Textual description of response status code.\n     *\n     * Do not depend on this.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.statusText;\n    /**\n     * URL of the resource retrieved, or null if not available.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.url;\n    /**\n     * Whether the status code falls in the 2xx range.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.ok;\n    /**\n     * Type of the response, narrowed to either the full response or the header.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.type;\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpHeaderResponse.prototype.type;\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /**\n     * The response body, or `null` if one was not returned.\n     * @type {?}\n     */\n    HttpResponse.prototype.body;\n    /** @type {?} */\n    HttpResponse.prototype.type;\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    /**\n     * @param {?} init\n     */\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message =\n                `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpErrorResponse.prototype.name;\n    /** @type {?} */\n    HttpErrorResponse.prototype.message;\n    /** @type {?} */\n    HttpErrorResponse.prototype.error;\n    /**\n     * Errors are never okay, even when the status code is in the 2xx success range.\n     * @type {?}\n     */\n    HttpErrorResponse.prototype.ok;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * \\@usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * \\@publicApi\n */\nclass HttpClient {\n    /**\n     * @param {?} handler\n     */\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(first, url, options = {}) {\n        /** @type {?} */\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (/** @type {?} */ (first));\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            /** @type {?} */\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            /** @type {?} */\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams((/** @type {?} */ ({ fromObject: options.params })));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, (/** @type {?} */ (url)), (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        /** @type {?} */\n        const events$ = of(req).pipe(concatMap((/**\n         * @param {?} req\n         * @return {?}\n         */\n        (req) => this.handler.handle(req))));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        /** @type {?} */\n        const res$ = (/** @type {?} */ (events$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event instanceof HttpResponse)))));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        })));\n                    case 'blob':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        })));\n                    case 'text':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        })));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => res.body)));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param {?} url     The endpoint URL.\n     * @param {?=} options The HTTP options to send with the request.\n     *\n     * @return {?}\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @template T\n     * @param {?} url The resource URL.\n     * @param {?} callbackParam The callback function name.\n     *\n     * @return {?}\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpClient.prototype.handler;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Intercepts and handles an `HttpRequest` or `HttpResponse`.\n *\n * Most interceptors transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n * An interceptor may transform the\n * response event stream as well, by applying additional RxJS operators on the stream\n * returned by `next.handle()`.\n *\n * More rarely, an interceptor may handle the request entirely,\n * and compose a new event stream instead of invoking `next.handle()`. This is an\n * acceptable behavior, but keep in mind that further interceptors will be skipped entirely.\n *\n * It is also rare but valid for an interceptor to return multiple responses on the\n * event stream for a single request.\n *\n * \\@publicApi\n *\n * @see [HTTP Guide](guide/http#intercepting-requests-and-responses)\n *\n * \\@usageNotes\n *\n * To use the same instance of `HttpInterceptors` for the entire app, import the `HttpClientModule`\n * only in your `AppModule`, and add the interceptors to the root application injector .\n * If you import `HttpClientModule` multiple times across different modules (for example, in lazy\n * loading modules), each import creates a new copy of the `HttpClientModule`, which overwrites the interceptors\n * provided in the root module.\n *\n * @record\n */\nfunction HttpInterceptor() { }\nif (false) {\n    /**\n     * Identifies and handles a given HTTP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    HttpInterceptor.prototype.intercept = function (req, next) { };\n}\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.next;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.interceptor;\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * \\@publicApi\n * @type {?}\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\n/** @type {?} */\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n * @abstract\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * \\@publicApi\n */\nclass JsonpClientBackend {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @private\n     * @return {?}\n     */\n    nextCallback() { return `ng_jsonp_callback_${nextRequestId++}`; }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            /** @type {?} */\n            const callback = this.nextCallback();\n            /** @type {?} */\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            /** @type {?} */\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            /** @type {?} */\n            let body = null;\n            // Whether the response callback has been called.\n            /** @type {?} */\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            /** @type {?} */\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (/**\n             * @param {?=} data\n             * @return {?}\n             */\n            (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            });\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            /** @type {?} */\n            const cleanup = (/**\n             * @return {?}\n             */\n            () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            });\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            /** @type {?} */\n            const onLoad = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK', url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            });\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error', url,\n                }));\n            });\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            });\n        }));\n    }\n}\nJsonpClientBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.callbackMap;\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.document;\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * \\@publicApi\n */\nclass JsonpInterceptor {\n    /**\n     * @param {?} jsonp\n     */\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle((/** @type {?} */ (req)));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpInterceptor.prototype.jsonp;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@publicApi\n * @abstract\n */\nclass XhrFactory {\n}\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }\n}\nBrowserXhr.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n/**\n * Tracks a response from the server that does not yet have a body.\n * @record\n */\nfunction PartialResponse() { }\nif (false) {\n    /** @type {?} */\n    PartialResponse.prototype.headers;\n    /** @type {?} */\n    PartialResponse.prototype.status;\n    /** @type {?} */\n    PartialResponse.prototype.statusText;\n    /** @type {?} */\n    PartialResponse.prototype.url;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * \\@publicApi\n */\nclass HttpXhrBackend {\n    /**\n     * @param {?} xhrFactory\n     */\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            /** @type {?} */\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((/**\n             * @param {?} name\n             * @param {?} values\n             * @return {?}\n             */\n            (name, values) => xhr.setRequestHeader(name, values.join(','))));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                /** @type {?} */\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                /** @type {?} */\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (/** @type {?} */ (((responseType !== 'json') ? responseType : 'text')));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            /** @type {?} */\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            /** @type {?} */\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            /** @type {?} */\n            const partialFromXhr = (/**\n             * @return {?}\n             */\n            () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                /** @type {?} */\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                /** @type {?} */\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                /** @type {?} */\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                /** @type {?} */\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            });\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            /** @type {?} */\n            const onLoad = (/**\n             * @return {?}\n             */\n            () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                /** @type {?} */\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                /** @type {?} */\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    /** @type {?} */\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = (/** @type {?} */ ({ error, text: body }));\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            });\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                const { url } = partialFromXhr();\n                /** @type {?} */\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            });\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            /** @type {?} */\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onDownProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                /** @type {?} */\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            });\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onUpProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                /** @type {?} */\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            });\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send((/** @type {?} */ (reqBody)));\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            });\n        }));\n    }\n}\nHttpXhrBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXhrBackend.prototype.xhrFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\n/** @type {?} */\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpXsrfTokenExtractor {\n}\nif (false) {\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        /** @type {?} */\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastCookieString;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastToken;\n    /**\n     * \\@internal for testing\n     * @type {?}\n     */\n    HttpXsrfCookieExtractor.prototype.parseCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.doc;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.cookieName;\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        /** @type {?} */\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        /** @type {?} */\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.tokenService;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.headerName;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    /**\n     * @param {?} backend\n     * @param {?} injector\n     */\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        if (this.chain === null) {\n            /** @type {?} */\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((/**\n             * @param {?} next\n             * @param {?} interceptor\n             * @return {?}\n             */\n            (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.chain;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.backend;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.injector;\n}\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((/**\n     * @param {?} next\n     * @param {?} interceptor\n     * @return {?}\n     */\n    (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * \\@publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param {?=} options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     * @return {?}\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpInterceptingHandler as ɵHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor };\n//# sourceMappingURL=http.js.map\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MarkdownPaneComponent } from './markdown-pane.component';\n\nconst routes: Routes = [{ path: '', component: MarkdownPaneComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MarkdownPaneRoutingModule { }\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./markdown-pane.module\";\nimport * as i2 from \"../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./markdown-pane.component.ngfactory\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"ngx-markdown\";\nimport * as i7 from \"@angular/common/http\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"@angular/cdk/bidi\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/cdk/platform\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/router\";\nimport * as i14 from \"./markdown-pane-routing.module\";\nimport * as i15 from \"./markdown-pane.component\";\nvar MarkdownPaneModuleNgFactory = i0.ɵcmf(i1.MarkdownPaneModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.MarkdownPaneComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i4.NgLocalization, i4.NgLocaleLocalization, [i0.LOCALE_ID, [2, i4.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i5.ɵangular_packages_forms_forms_o, i5.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i6.MarkdownService, i6.MarkdownService, [i0.PLATFORM_ID, [2, i7.HttpClient], i8.DomSanitizer, i6.MarkedOptions]), i0.ɵmpd(1073742336, i4.CommonModule, i4.CommonModule, []), i0.ɵmpd(1073742336, i5.ɵangular_packages_forms_forms_d, i5.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i5.FormsModule, i5.FormsModule, []), i0.ɵmpd(1073742336, i9.BidiModule, i9.BidiModule, []), i0.ɵmpd(1073742336, i10.MatCommonModule, i10.MatCommonModule, [[2, i10.MATERIAL_SANITY_CHECKS], [2, i8.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i11.PlatformModule, i11.PlatformModule, []), i0.ɵmpd(1073742336, i10.MatRippleModule, i10.MatRippleModule, []), i0.ɵmpd(1073742336, i12.MatButtonModule, i12.MatButtonModule, []), i0.ɵmpd(1073742336, i13.RouterModule, i13.RouterModule, [[2, i13.ɵangular_packages_router_router_a], [2, i13.Router]]), i0.ɵmpd(1073742336, i14.MarkdownPaneRoutingModule, i14.MarkdownPaneRoutingModule, []), i0.ɵmpd(1073742336, i6.MarkdownModule, i6.MarkdownModule, []), i0.ɵmpd(1073742336, i1.MarkdownPaneModule, i1.MarkdownPaneModule, []), i0.ɵmpd(1024, i13.ROUTES, function () { return [[{ path: \"\", component: i15.MarkdownPaneComponent }]]; }, []), i0.ɵmpd(256, i6.MarkedOptions, { gfm: true, tables: true, breaks: false, pedantic: false, sanitize: false, smartLists: true, smartypants: false }, [])]); });\nexport { MarkdownPaneModuleNgFactory as MarkdownPaneModuleNgFactory };\n"]}